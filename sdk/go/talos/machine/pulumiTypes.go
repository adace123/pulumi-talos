// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package machine

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
	"github.com/pulumiverse/pulumi-talos/sdk/go/talos/internal"
)

var _ = internal.GetEnvOrDefault

type BootstrapClientConfiguration struct {
	// The client CA certificate
	CaCertificate string `pulumi:"caCertificate"`
	// The client certificate
	ClientCertificate string `pulumi:"clientCertificate"`
	// The client key
	ClientKey string `pulumi:"clientKey"`
}

// BootstrapClientConfigurationInput is an input type that accepts BootstrapClientConfigurationArgs and BootstrapClientConfigurationOutput values.
// You can construct a concrete instance of `BootstrapClientConfigurationInput` via:
//
//	BootstrapClientConfigurationArgs{...}
type BootstrapClientConfigurationInput interface {
	pulumi.Input

	ToBootstrapClientConfigurationOutput() BootstrapClientConfigurationOutput
	ToBootstrapClientConfigurationOutputWithContext(context.Context) BootstrapClientConfigurationOutput
}

type BootstrapClientConfigurationArgs struct {
	// The client CA certificate
	CaCertificate pulumi.StringInput `pulumi:"caCertificate"`
	// The client certificate
	ClientCertificate pulumi.StringInput `pulumi:"clientCertificate"`
	// The client key
	ClientKey pulumi.StringInput `pulumi:"clientKey"`
}

func (BootstrapClientConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BootstrapClientConfiguration)(nil)).Elem()
}

func (o SecretsClientConfigurationOutput) ToBootstrapClientConfigurationOutput() BootstrapClientConfigurationOutput {
	return BootstrapClientConfigurationOutput(o.ToSecretsClientConfigurationOutput())
}

func (i BootstrapClientConfigurationArgs) ToBootstrapClientConfigurationOutput() BootstrapClientConfigurationOutput {
	return i.ToBootstrapClientConfigurationOutputWithContext(context.Background())
}

func (i BootstrapClientConfigurationArgs) ToBootstrapClientConfigurationOutputWithContext(ctx context.Context) BootstrapClientConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BootstrapClientConfigurationOutput)
}

func (i BootstrapClientConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[BootstrapClientConfiguration] {
	return pulumix.Output[BootstrapClientConfiguration]{
		OutputState: i.ToBootstrapClientConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i BootstrapClientConfigurationArgs) ToBootstrapClientConfigurationPtrOutput() BootstrapClientConfigurationPtrOutput {
	return i.ToBootstrapClientConfigurationPtrOutputWithContext(context.Background())
}

func (i BootstrapClientConfigurationArgs) ToBootstrapClientConfigurationPtrOutputWithContext(ctx context.Context) BootstrapClientConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BootstrapClientConfigurationOutput).ToBootstrapClientConfigurationPtrOutputWithContext(ctx)
}

// BootstrapClientConfigurationPtrInput is an input type that accepts BootstrapClientConfigurationArgs, BootstrapClientConfigurationPtr and BootstrapClientConfigurationPtrOutput values.
// You can construct a concrete instance of `BootstrapClientConfigurationPtrInput` via:
//
//	        BootstrapClientConfigurationArgs{...}
//
//	or:
//
//	        nil
type BootstrapClientConfigurationPtrInput interface {
	pulumi.Input

	ToBootstrapClientConfigurationPtrOutput() BootstrapClientConfigurationPtrOutput
	ToBootstrapClientConfigurationPtrOutputWithContext(context.Context) BootstrapClientConfigurationPtrOutput
}

type bootstrapClientConfigurationPtrType BootstrapClientConfigurationArgs

func BootstrapClientConfigurationPtr(v *BootstrapClientConfigurationArgs) BootstrapClientConfigurationPtrInput {
	return (*bootstrapClientConfigurationPtrType)(v)
}

func (*bootstrapClientConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BootstrapClientConfiguration)(nil)).Elem()
}

func (i *bootstrapClientConfigurationPtrType) ToBootstrapClientConfigurationPtrOutput() BootstrapClientConfigurationPtrOutput {
	return i.ToBootstrapClientConfigurationPtrOutputWithContext(context.Background())
}

func (i *bootstrapClientConfigurationPtrType) ToBootstrapClientConfigurationPtrOutputWithContext(ctx context.Context) BootstrapClientConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BootstrapClientConfigurationPtrOutput)
}

func (i *bootstrapClientConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*BootstrapClientConfiguration] {
	return pulumix.Output[*BootstrapClientConfiguration]{
		OutputState: i.ToBootstrapClientConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type BootstrapClientConfigurationOutput struct{ *pulumi.OutputState }

func (BootstrapClientConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BootstrapClientConfiguration)(nil)).Elem()
}

func (o BootstrapClientConfigurationOutput) ToBootstrapClientConfigurationOutput() BootstrapClientConfigurationOutput {
	return o
}

func (o BootstrapClientConfigurationOutput) ToBootstrapClientConfigurationOutputWithContext(ctx context.Context) BootstrapClientConfigurationOutput {
	return o
}

func (o BootstrapClientConfigurationOutput) ToBootstrapClientConfigurationPtrOutput() BootstrapClientConfigurationPtrOutput {
	return o.ToBootstrapClientConfigurationPtrOutputWithContext(context.Background())
}

func (o BootstrapClientConfigurationOutput) ToBootstrapClientConfigurationPtrOutputWithContext(ctx context.Context) BootstrapClientConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BootstrapClientConfiguration) *BootstrapClientConfiguration {
		return &v
	}).(BootstrapClientConfigurationPtrOutput)
}

func (o BootstrapClientConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[BootstrapClientConfiguration] {
	return pulumix.Output[BootstrapClientConfiguration]{
		OutputState: o.OutputState,
	}
}

// The client CA certificate
func (o BootstrapClientConfigurationOutput) CaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v BootstrapClientConfiguration) string { return v.CaCertificate }).(pulumi.StringOutput)
}

// The client certificate
func (o BootstrapClientConfigurationOutput) ClientCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v BootstrapClientConfiguration) string { return v.ClientCertificate }).(pulumi.StringOutput)
}

// The client key
func (o BootstrapClientConfigurationOutput) ClientKey() pulumi.StringOutput {
	return o.ApplyT(func(v BootstrapClientConfiguration) string { return v.ClientKey }).(pulumi.StringOutput)
}

type BootstrapClientConfigurationPtrOutput struct{ *pulumi.OutputState }

func (BootstrapClientConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BootstrapClientConfiguration)(nil)).Elem()
}

func (o BootstrapClientConfigurationPtrOutput) ToBootstrapClientConfigurationPtrOutput() BootstrapClientConfigurationPtrOutput {
	return o
}

func (o BootstrapClientConfigurationPtrOutput) ToBootstrapClientConfigurationPtrOutputWithContext(ctx context.Context) BootstrapClientConfigurationPtrOutput {
	return o
}

func (o BootstrapClientConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BootstrapClientConfiguration] {
	return pulumix.Output[*BootstrapClientConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o BootstrapClientConfigurationPtrOutput) Elem() BootstrapClientConfigurationOutput {
	return o.ApplyT(func(v *BootstrapClientConfiguration) BootstrapClientConfiguration {
		if v != nil {
			return *v
		}
		var ret BootstrapClientConfiguration
		return ret
	}).(BootstrapClientConfigurationOutput)
}

// The client CA certificate
func (o BootstrapClientConfigurationPtrOutput) CaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BootstrapClientConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.CaCertificate
	}).(pulumi.StringPtrOutput)
}

// The client certificate
func (o BootstrapClientConfigurationPtrOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BootstrapClientConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.ClientCertificate
	}).(pulumi.StringPtrOutput)
}

// The client key
func (o BootstrapClientConfigurationPtrOutput) ClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BootstrapClientConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.ClientKey
	}).(pulumi.StringPtrOutput)
}

type BootstrapTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
}

// BootstrapTimeoutsInput is an input type that accepts BootstrapTimeoutsArgs and BootstrapTimeoutsOutput values.
// You can construct a concrete instance of `BootstrapTimeoutsInput` via:
//
//	BootstrapTimeoutsArgs{...}
type BootstrapTimeoutsInput interface {
	pulumi.Input

	ToBootstrapTimeoutsOutput() BootstrapTimeoutsOutput
	ToBootstrapTimeoutsOutputWithContext(context.Context) BootstrapTimeoutsOutput
}

type BootstrapTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
}

func (BootstrapTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BootstrapTimeouts)(nil)).Elem()
}

func (i BootstrapTimeoutsArgs) ToBootstrapTimeoutsOutput() BootstrapTimeoutsOutput {
	return i.ToBootstrapTimeoutsOutputWithContext(context.Background())
}

func (i BootstrapTimeoutsArgs) ToBootstrapTimeoutsOutputWithContext(ctx context.Context) BootstrapTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BootstrapTimeoutsOutput)
}

func (i BootstrapTimeoutsArgs) ToOutput(ctx context.Context) pulumix.Output[BootstrapTimeouts] {
	return pulumix.Output[BootstrapTimeouts]{
		OutputState: i.ToBootstrapTimeoutsOutputWithContext(ctx).OutputState,
	}
}

func (i BootstrapTimeoutsArgs) ToBootstrapTimeoutsPtrOutput() BootstrapTimeoutsPtrOutput {
	return i.ToBootstrapTimeoutsPtrOutputWithContext(context.Background())
}

func (i BootstrapTimeoutsArgs) ToBootstrapTimeoutsPtrOutputWithContext(ctx context.Context) BootstrapTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BootstrapTimeoutsOutput).ToBootstrapTimeoutsPtrOutputWithContext(ctx)
}

// BootstrapTimeoutsPtrInput is an input type that accepts BootstrapTimeoutsArgs, BootstrapTimeoutsPtr and BootstrapTimeoutsPtrOutput values.
// You can construct a concrete instance of `BootstrapTimeoutsPtrInput` via:
//
//	        BootstrapTimeoutsArgs{...}
//
//	or:
//
//	        nil
type BootstrapTimeoutsPtrInput interface {
	pulumi.Input

	ToBootstrapTimeoutsPtrOutput() BootstrapTimeoutsPtrOutput
	ToBootstrapTimeoutsPtrOutputWithContext(context.Context) BootstrapTimeoutsPtrOutput
}

type bootstrapTimeoutsPtrType BootstrapTimeoutsArgs

func BootstrapTimeoutsPtr(v *BootstrapTimeoutsArgs) BootstrapTimeoutsPtrInput {
	return (*bootstrapTimeoutsPtrType)(v)
}

func (*bootstrapTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BootstrapTimeouts)(nil)).Elem()
}

func (i *bootstrapTimeoutsPtrType) ToBootstrapTimeoutsPtrOutput() BootstrapTimeoutsPtrOutput {
	return i.ToBootstrapTimeoutsPtrOutputWithContext(context.Background())
}

func (i *bootstrapTimeoutsPtrType) ToBootstrapTimeoutsPtrOutputWithContext(ctx context.Context) BootstrapTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BootstrapTimeoutsPtrOutput)
}

func (i *bootstrapTimeoutsPtrType) ToOutput(ctx context.Context) pulumix.Output[*BootstrapTimeouts] {
	return pulumix.Output[*BootstrapTimeouts]{
		OutputState: i.ToBootstrapTimeoutsPtrOutputWithContext(ctx).OutputState,
	}
}

type BootstrapTimeoutsOutput struct{ *pulumi.OutputState }

func (BootstrapTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BootstrapTimeouts)(nil)).Elem()
}

func (o BootstrapTimeoutsOutput) ToBootstrapTimeoutsOutput() BootstrapTimeoutsOutput {
	return o
}

func (o BootstrapTimeoutsOutput) ToBootstrapTimeoutsOutputWithContext(ctx context.Context) BootstrapTimeoutsOutput {
	return o
}

func (o BootstrapTimeoutsOutput) ToBootstrapTimeoutsPtrOutput() BootstrapTimeoutsPtrOutput {
	return o.ToBootstrapTimeoutsPtrOutputWithContext(context.Background())
}

func (o BootstrapTimeoutsOutput) ToBootstrapTimeoutsPtrOutputWithContext(ctx context.Context) BootstrapTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BootstrapTimeouts) *BootstrapTimeouts {
		return &v
	}).(BootstrapTimeoutsPtrOutput)
}

func (o BootstrapTimeoutsOutput) ToOutput(ctx context.Context) pulumix.Output[BootstrapTimeouts] {
	return pulumix.Output[BootstrapTimeouts]{
		OutputState: o.OutputState,
	}
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o BootstrapTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BootstrapTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

type BootstrapTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (BootstrapTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BootstrapTimeouts)(nil)).Elem()
}

func (o BootstrapTimeoutsPtrOutput) ToBootstrapTimeoutsPtrOutput() BootstrapTimeoutsPtrOutput {
	return o
}

func (o BootstrapTimeoutsPtrOutput) ToBootstrapTimeoutsPtrOutputWithContext(ctx context.Context) BootstrapTimeoutsPtrOutput {
	return o
}

func (o BootstrapTimeoutsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BootstrapTimeouts] {
	return pulumix.Output[*BootstrapTimeouts]{
		OutputState: o.OutputState,
	}
}

func (o BootstrapTimeoutsPtrOutput) Elem() BootstrapTimeoutsOutput {
	return o.ApplyT(func(v *BootstrapTimeouts) BootstrapTimeouts {
		if v != nil {
			return *v
		}
		var ret BootstrapTimeouts
		return ret
	}).(BootstrapTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o BootstrapTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BootstrapTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

type ConfigurationApplyClientConfiguration struct {
	// The client CA certificate
	CaCertificate string `pulumi:"caCertificate"`
	// The client certificate
	ClientCertificate string `pulumi:"clientCertificate"`
	// The client key
	ClientKey string `pulumi:"clientKey"`
}

// ConfigurationApplyClientConfigurationInput is an input type that accepts ConfigurationApplyClientConfigurationArgs and ConfigurationApplyClientConfigurationOutput values.
// You can construct a concrete instance of `ConfigurationApplyClientConfigurationInput` via:
//
//	ConfigurationApplyClientConfigurationArgs{...}
type ConfigurationApplyClientConfigurationInput interface {
	pulumi.Input

	ToConfigurationApplyClientConfigurationOutput() ConfigurationApplyClientConfigurationOutput
	ToConfigurationApplyClientConfigurationOutputWithContext(context.Context) ConfigurationApplyClientConfigurationOutput
}

type ConfigurationApplyClientConfigurationArgs struct {
	// The client CA certificate
	CaCertificate pulumi.StringInput `pulumi:"caCertificate"`
	// The client certificate
	ClientCertificate pulumi.StringInput `pulumi:"clientCertificate"`
	// The client key
	ClientKey pulumi.StringInput `pulumi:"clientKey"`
}

func (ConfigurationApplyClientConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationApplyClientConfiguration)(nil)).Elem()
}

func (i ConfigurationApplyClientConfigurationArgs) ToConfigurationApplyClientConfigurationOutput() ConfigurationApplyClientConfigurationOutput {
	return i.ToConfigurationApplyClientConfigurationOutputWithContext(context.Background())
}

func (i ConfigurationApplyClientConfigurationArgs) ToConfigurationApplyClientConfigurationOutputWithContext(ctx context.Context) ConfigurationApplyClientConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationApplyClientConfigurationOutput)
}

func (i ConfigurationApplyClientConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[ConfigurationApplyClientConfiguration] {
	return pulumix.Output[ConfigurationApplyClientConfiguration]{
		OutputState: i.ToConfigurationApplyClientConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i ConfigurationApplyClientConfigurationArgs) ToConfigurationApplyClientConfigurationPtrOutput() ConfigurationApplyClientConfigurationPtrOutput {
	return i.ToConfigurationApplyClientConfigurationPtrOutputWithContext(context.Background())
}

func (i ConfigurationApplyClientConfigurationArgs) ToConfigurationApplyClientConfigurationPtrOutputWithContext(ctx context.Context) ConfigurationApplyClientConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationApplyClientConfigurationOutput).ToConfigurationApplyClientConfigurationPtrOutputWithContext(ctx)
}

// ConfigurationApplyClientConfigurationPtrInput is an input type that accepts ConfigurationApplyClientConfigurationArgs, ConfigurationApplyClientConfigurationPtr and ConfigurationApplyClientConfigurationPtrOutput values.
// You can construct a concrete instance of `ConfigurationApplyClientConfigurationPtrInput` via:
//
//	        ConfigurationApplyClientConfigurationArgs{...}
//
//	or:
//
//	        nil
type ConfigurationApplyClientConfigurationPtrInput interface {
	pulumi.Input

	ToConfigurationApplyClientConfigurationPtrOutput() ConfigurationApplyClientConfigurationPtrOutput
	ToConfigurationApplyClientConfigurationPtrOutputWithContext(context.Context) ConfigurationApplyClientConfigurationPtrOutput
}

type configurationApplyClientConfigurationPtrType ConfigurationApplyClientConfigurationArgs

func ConfigurationApplyClientConfigurationPtr(v *ConfigurationApplyClientConfigurationArgs) ConfigurationApplyClientConfigurationPtrInput {
	return (*configurationApplyClientConfigurationPtrType)(v)
}

func (*configurationApplyClientConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationApplyClientConfiguration)(nil)).Elem()
}

func (i *configurationApplyClientConfigurationPtrType) ToConfigurationApplyClientConfigurationPtrOutput() ConfigurationApplyClientConfigurationPtrOutput {
	return i.ToConfigurationApplyClientConfigurationPtrOutputWithContext(context.Background())
}

func (i *configurationApplyClientConfigurationPtrType) ToConfigurationApplyClientConfigurationPtrOutputWithContext(ctx context.Context) ConfigurationApplyClientConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationApplyClientConfigurationPtrOutput)
}

func (i *configurationApplyClientConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*ConfigurationApplyClientConfiguration] {
	return pulumix.Output[*ConfigurationApplyClientConfiguration]{
		OutputState: i.ToConfigurationApplyClientConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type ConfigurationApplyClientConfigurationOutput struct{ *pulumi.OutputState }

func (ConfigurationApplyClientConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationApplyClientConfiguration)(nil)).Elem()
}

func (o SecretsClientConfigurationOutput) ToConfigurationApplyClientConfigurationOutput() ConfigurationApplyClientConfigurationOutput {
	return ConfigurationApplyClientConfigurationOutput(o.ToSecretsClientConfigurationOutput())
}

func (o ConfigurationApplyClientConfigurationOutput) ToConfigurationApplyClientConfigurationOutput() ConfigurationApplyClientConfigurationOutput {
	return o
}

func (o ConfigurationApplyClientConfigurationOutput) ToConfigurationApplyClientConfigurationOutputWithContext(ctx context.Context) ConfigurationApplyClientConfigurationOutput {
	return o
}

func (o ConfigurationApplyClientConfigurationOutput) ToConfigurationApplyClientConfigurationPtrOutput() ConfigurationApplyClientConfigurationPtrOutput {
	return o.ToConfigurationApplyClientConfigurationPtrOutputWithContext(context.Background())
}

func (o ConfigurationApplyClientConfigurationOutput) ToConfigurationApplyClientConfigurationPtrOutputWithContext(ctx context.Context) ConfigurationApplyClientConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigurationApplyClientConfiguration) *ConfigurationApplyClientConfiguration {
		return &v
	}).(ConfigurationApplyClientConfigurationPtrOutput)
}

func (o ConfigurationApplyClientConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[ConfigurationApplyClientConfiguration] {
	return pulumix.Output[ConfigurationApplyClientConfiguration]{
		OutputState: o.OutputState,
	}
}

// The client CA certificate
func (o ConfigurationApplyClientConfigurationOutput) CaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationApplyClientConfiguration) string { return v.CaCertificate }).(pulumi.StringOutput)
}

// The client certificate
func (o ConfigurationApplyClientConfigurationOutput) ClientCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationApplyClientConfiguration) string { return v.ClientCertificate }).(pulumi.StringOutput)
}

// The client key
func (o ConfigurationApplyClientConfigurationOutput) ClientKey() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationApplyClientConfiguration) string { return v.ClientKey }).(pulumi.StringOutput)
}

type ConfigurationApplyClientConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ConfigurationApplyClientConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationApplyClientConfiguration)(nil)).Elem()
}

func (o ConfigurationApplyClientConfigurationPtrOutput) ToConfigurationApplyClientConfigurationPtrOutput() ConfigurationApplyClientConfigurationPtrOutput {
	return o
}

func (o ConfigurationApplyClientConfigurationPtrOutput) ToConfigurationApplyClientConfigurationPtrOutputWithContext(ctx context.Context) ConfigurationApplyClientConfigurationPtrOutput {
	return o
}

func (o ConfigurationApplyClientConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ConfigurationApplyClientConfiguration] {
	return pulumix.Output[*ConfigurationApplyClientConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o ConfigurationApplyClientConfigurationPtrOutput) Elem() ConfigurationApplyClientConfigurationOutput {
	return o.ApplyT(func(v *ConfigurationApplyClientConfiguration) ConfigurationApplyClientConfiguration {
		if v != nil {
			return *v
		}
		var ret ConfigurationApplyClientConfiguration
		return ret
	}).(ConfigurationApplyClientConfigurationOutput)
}

// The client CA certificate
func (o ConfigurationApplyClientConfigurationPtrOutput) CaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationApplyClientConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.CaCertificate
	}).(pulumi.StringPtrOutput)
}

// The client certificate
func (o ConfigurationApplyClientConfigurationPtrOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationApplyClientConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.ClientCertificate
	}).(pulumi.StringPtrOutput)
}

// The client key
func (o ConfigurationApplyClientConfigurationPtrOutput) ClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationApplyClientConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.ClientKey
	}).(pulumi.StringPtrOutput)
}

type ConfigurationMachineSecrets struct {
	// The certs for the talos kubernetes cluster
	Certs ConfigurationMachineSecretsCerts `pulumi:"certs"`
	// The cluster secrets
	Cluster ConfigurationMachineSecretsCluster `pulumi:"cluster"`
	// The secrets for the talos kubernetes cluster
	Secrets ConfigurationMachineSecretsSecrets `pulumi:"secrets"`
	// The trustd info for the talos kubernetes cluster
	Trustdinfo ConfigurationMachineSecretsTrustdinfo `pulumi:"trustdinfo"`
}

// ConfigurationMachineSecretsInput is an input type that accepts ConfigurationMachineSecretsArgs and ConfigurationMachineSecretsOutput values.
// You can construct a concrete instance of `ConfigurationMachineSecretsInput` via:
//
//	ConfigurationMachineSecretsArgs{...}
type ConfigurationMachineSecretsInput interface {
	pulumi.Input

	ToConfigurationMachineSecretsOutput() ConfigurationMachineSecretsOutput
	ToConfigurationMachineSecretsOutputWithContext(context.Context) ConfigurationMachineSecretsOutput
}

type ConfigurationMachineSecretsArgs struct {
	// The certs for the talos kubernetes cluster
	Certs ConfigurationMachineSecretsCertsInput `pulumi:"certs"`
	// The cluster secrets
	Cluster ConfigurationMachineSecretsClusterInput `pulumi:"cluster"`
	// The secrets for the talos kubernetes cluster
	Secrets ConfigurationMachineSecretsSecretsInput `pulumi:"secrets"`
	// The trustd info for the talos kubernetes cluster
	Trustdinfo ConfigurationMachineSecretsTrustdinfoInput `pulumi:"trustdinfo"`
}

func (ConfigurationMachineSecretsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationMachineSecrets)(nil)).Elem()
}

func (i ConfigurationMachineSecretsArgs) ToConfigurationMachineSecretsOutput() ConfigurationMachineSecretsOutput {
	return i.ToConfigurationMachineSecretsOutputWithContext(context.Background())
}

func (i ConfigurationMachineSecretsArgs) ToConfigurationMachineSecretsOutputWithContext(ctx context.Context) ConfigurationMachineSecretsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationMachineSecretsOutput)
}

func (i ConfigurationMachineSecretsArgs) ToOutput(ctx context.Context) pulumix.Output[ConfigurationMachineSecrets] {
	return pulumix.Output[ConfigurationMachineSecrets]{
		OutputState: i.ToConfigurationMachineSecretsOutputWithContext(ctx).OutputState,
	}
}

type ConfigurationMachineSecretsOutput struct{ *pulumi.OutputState }

func (ConfigurationMachineSecretsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationMachineSecrets)(nil)).Elem()
}

func (o ConfigurationMachineSecretsOutput) ToConfigurationMachineSecretsOutput() ConfigurationMachineSecretsOutput {
	return o
}

func (o ConfigurationMachineSecretsOutput) ToConfigurationMachineSecretsOutputWithContext(ctx context.Context) ConfigurationMachineSecretsOutput {
	return o
}

func (o ConfigurationMachineSecretsOutput) ToOutput(ctx context.Context) pulumix.Output[ConfigurationMachineSecrets] {
	return pulumix.Output[ConfigurationMachineSecrets]{
		OutputState: o.OutputState,
	}
}

// The certs for the talos kubernetes cluster
func (o ConfigurationMachineSecretsOutput) Certs() ConfigurationMachineSecretsCertsOutput {
	return o.ApplyT(func(v ConfigurationMachineSecrets) ConfigurationMachineSecretsCerts { return v.Certs }).(ConfigurationMachineSecretsCertsOutput)
}

// The cluster secrets
func (o ConfigurationMachineSecretsOutput) Cluster() ConfigurationMachineSecretsClusterOutput {
	return o.ApplyT(func(v ConfigurationMachineSecrets) ConfigurationMachineSecretsCluster { return v.Cluster }).(ConfigurationMachineSecretsClusterOutput)
}

// The secrets for the talos kubernetes cluster
func (o ConfigurationMachineSecretsOutput) Secrets() ConfigurationMachineSecretsSecretsOutput {
	return o.ApplyT(func(v ConfigurationMachineSecrets) ConfigurationMachineSecretsSecrets { return v.Secrets }).(ConfigurationMachineSecretsSecretsOutput)
}

// The trustd info for the talos kubernetes cluster
func (o ConfigurationMachineSecretsOutput) Trustdinfo() ConfigurationMachineSecretsTrustdinfoOutput {
	return o.ApplyT(func(v ConfigurationMachineSecrets) ConfigurationMachineSecretsTrustdinfo { return v.Trustdinfo }).(ConfigurationMachineSecretsTrustdinfoOutput)
}

type ConfigurationMachineSecretsCerts struct {
	// The certificate and key pair
	Etcd ConfigurationMachineSecretsCertsEtcd `pulumi:"etcd"`
	// The certificate and key pair
	K8s ConfigurationMachineSecretsCertsK8s `pulumi:"k8s"`
	// The certificate and key pair
	K8sAggregator     ConfigurationMachineSecretsCertsK8sAggregator     `pulumi:"k8sAggregator"`
	K8sServiceaccount ConfigurationMachineSecretsCertsK8sServiceaccount `pulumi:"k8sServiceaccount"`
	// The certificate and key pair
	Os ConfigurationMachineSecretsCertsOs `pulumi:"os"`
}

// ConfigurationMachineSecretsCertsInput is an input type that accepts ConfigurationMachineSecretsCertsArgs and ConfigurationMachineSecretsCertsOutput values.
// You can construct a concrete instance of `ConfigurationMachineSecretsCertsInput` via:
//
//	ConfigurationMachineSecretsCertsArgs{...}
type ConfigurationMachineSecretsCertsInput interface {
	pulumi.Input

	ToConfigurationMachineSecretsCertsOutput() ConfigurationMachineSecretsCertsOutput
	ToConfigurationMachineSecretsCertsOutputWithContext(context.Context) ConfigurationMachineSecretsCertsOutput
}

type ConfigurationMachineSecretsCertsArgs struct {
	// The certificate and key pair
	Etcd ConfigurationMachineSecretsCertsEtcdInput `pulumi:"etcd"`
	// The certificate and key pair
	K8s ConfigurationMachineSecretsCertsK8sInput `pulumi:"k8s"`
	// The certificate and key pair
	K8sAggregator     ConfigurationMachineSecretsCertsK8sAggregatorInput     `pulumi:"k8sAggregator"`
	K8sServiceaccount ConfigurationMachineSecretsCertsK8sServiceaccountInput `pulumi:"k8sServiceaccount"`
	// The certificate and key pair
	Os ConfigurationMachineSecretsCertsOsInput `pulumi:"os"`
}

func (ConfigurationMachineSecretsCertsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationMachineSecretsCerts)(nil)).Elem()
}

func (i ConfigurationMachineSecretsCertsArgs) ToConfigurationMachineSecretsCertsOutput() ConfigurationMachineSecretsCertsOutput {
	return i.ToConfigurationMachineSecretsCertsOutputWithContext(context.Background())
}

func (i ConfigurationMachineSecretsCertsArgs) ToConfigurationMachineSecretsCertsOutputWithContext(ctx context.Context) ConfigurationMachineSecretsCertsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationMachineSecretsCertsOutput)
}

func (i ConfigurationMachineSecretsCertsArgs) ToOutput(ctx context.Context) pulumix.Output[ConfigurationMachineSecretsCerts] {
	return pulumix.Output[ConfigurationMachineSecretsCerts]{
		OutputState: i.ToConfigurationMachineSecretsCertsOutputWithContext(ctx).OutputState,
	}
}

type ConfigurationMachineSecretsCertsOutput struct{ *pulumi.OutputState }

func (ConfigurationMachineSecretsCertsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationMachineSecretsCerts)(nil)).Elem()
}

func (o ConfigurationMachineSecretsCertsOutput) ToConfigurationMachineSecretsCertsOutput() ConfigurationMachineSecretsCertsOutput {
	return o
}

func (o ConfigurationMachineSecretsCertsOutput) ToConfigurationMachineSecretsCertsOutputWithContext(ctx context.Context) ConfigurationMachineSecretsCertsOutput {
	return o
}

func (o ConfigurationMachineSecretsCertsOutput) ToOutput(ctx context.Context) pulumix.Output[ConfigurationMachineSecretsCerts] {
	return pulumix.Output[ConfigurationMachineSecretsCerts]{
		OutputState: o.OutputState,
	}
}

// The certificate and key pair
func (o ConfigurationMachineSecretsCertsOutput) Etcd() ConfigurationMachineSecretsCertsEtcdOutput {
	return o.ApplyT(func(v ConfigurationMachineSecretsCerts) ConfigurationMachineSecretsCertsEtcd { return v.Etcd }).(ConfigurationMachineSecretsCertsEtcdOutput)
}

// The certificate and key pair
func (o ConfigurationMachineSecretsCertsOutput) K8s() ConfigurationMachineSecretsCertsK8sOutput {
	return o.ApplyT(func(v ConfigurationMachineSecretsCerts) ConfigurationMachineSecretsCertsK8s { return v.K8s }).(ConfigurationMachineSecretsCertsK8sOutput)
}

// The certificate and key pair
func (o ConfigurationMachineSecretsCertsOutput) K8sAggregator() ConfigurationMachineSecretsCertsK8sAggregatorOutput {
	return o.ApplyT(func(v ConfigurationMachineSecretsCerts) ConfigurationMachineSecretsCertsK8sAggregator {
		return v.K8sAggregator
	}).(ConfigurationMachineSecretsCertsK8sAggregatorOutput)
}

func (o ConfigurationMachineSecretsCertsOutput) K8sServiceaccount() ConfigurationMachineSecretsCertsK8sServiceaccountOutput {
	return o.ApplyT(func(v ConfigurationMachineSecretsCerts) ConfigurationMachineSecretsCertsK8sServiceaccount {
		return v.K8sServiceaccount
	}).(ConfigurationMachineSecretsCertsK8sServiceaccountOutput)
}

// The certificate and key pair
func (o ConfigurationMachineSecretsCertsOutput) Os() ConfigurationMachineSecretsCertsOsOutput {
	return o.ApplyT(func(v ConfigurationMachineSecretsCerts) ConfigurationMachineSecretsCertsOs { return v.Os }).(ConfigurationMachineSecretsCertsOsOutput)
}

type ConfigurationMachineSecretsCertsEtcd struct {
	// certificate data
	Cert string `pulumi:"cert"`
	// key data
	Key string `pulumi:"key"`
}

// ConfigurationMachineSecretsCertsEtcdInput is an input type that accepts ConfigurationMachineSecretsCertsEtcdArgs and ConfigurationMachineSecretsCertsEtcdOutput values.
// You can construct a concrete instance of `ConfigurationMachineSecretsCertsEtcdInput` via:
//
//	ConfigurationMachineSecretsCertsEtcdArgs{...}
type ConfigurationMachineSecretsCertsEtcdInput interface {
	pulumi.Input

	ToConfigurationMachineSecretsCertsEtcdOutput() ConfigurationMachineSecretsCertsEtcdOutput
	ToConfigurationMachineSecretsCertsEtcdOutputWithContext(context.Context) ConfigurationMachineSecretsCertsEtcdOutput
}

type ConfigurationMachineSecretsCertsEtcdArgs struct {
	// certificate data
	Cert pulumi.StringInput `pulumi:"cert"`
	// key data
	Key pulumi.StringInput `pulumi:"key"`
}

func (ConfigurationMachineSecretsCertsEtcdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationMachineSecretsCertsEtcd)(nil)).Elem()
}

func (i ConfigurationMachineSecretsCertsEtcdArgs) ToConfigurationMachineSecretsCertsEtcdOutput() ConfigurationMachineSecretsCertsEtcdOutput {
	return i.ToConfigurationMachineSecretsCertsEtcdOutputWithContext(context.Background())
}

func (i ConfigurationMachineSecretsCertsEtcdArgs) ToConfigurationMachineSecretsCertsEtcdOutputWithContext(ctx context.Context) ConfigurationMachineSecretsCertsEtcdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationMachineSecretsCertsEtcdOutput)
}

func (i ConfigurationMachineSecretsCertsEtcdArgs) ToOutput(ctx context.Context) pulumix.Output[ConfigurationMachineSecretsCertsEtcd] {
	return pulumix.Output[ConfigurationMachineSecretsCertsEtcd]{
		OutputState: i.ToConfigurationMachineSecretsCertsEtcdOutputWithContext(ctx).OutputState,
	}
}

type ConfigurationMachineSecretsCertsEtcdOutput struct{ *pulumi.OutputState }

func (ConfigurationMachineSecretsCertsEtcdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationMachineSecretsCertsEtcd)(nil)).Elem()
}

func (o ConfigurationMachineSecretsCertsEtcdOutput) ToConfigurationMachineSecretsCertsEtcdOutput() ConfigurationMachineSecretsCertsEtcdOutput {
	return o
}

func (o ConfigurationMachineSecretsCertsEtcdOutput) ToConfigurationMachineSecretsCertsEtcdOutputWithContext(ctx context.Context) ConfigurationMachineSecretsCertsEtcdOutput {
	return o
}

func (o ConfigurationMachineSecretsCertsEtcdOutput) ToOutput(ctx context.Context) pulumix.Output[ConfigurationMachineSecretsCertsEtcd] {
	return pulumix.Output[ConfigurationMachineSecretsCertsEtcd]{
		OutputState: o.OutputState,
	}
}

// certificate data
func (o ConfigurationMachineSecretsCertsEtcdOutput) Cert() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationMachineSecretsCertsEtcd) string { return v.Cert }).(pulumi.StringOutput)
}

// key data
func (o ConfigurationMachineSecretsCertsEtcdOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationMachineSecretsCertsEtcd) string { return v.Key }).(pulumi.StringOutput)
}

type ConfigurationMachineSecretsCertsK8s struct {
	// certificate data
	Cert string `pulumi:"cert"`
	// key data
	Key string `pulumi:"key"`
}

// ConfigurationMachineSecretsCertsK8sInput is an input type that accepts ConfigurationMachineSecretsCertsK8sArgs and ConfigurationMachineSecretsCertsK8sOutput values.
// You can construct a concrete instance of `ConfigurationMachineSecretsCertsK8sInput` via:
//
//	ConfigurationMachineSecretsCertsK8sArgs{...}
type ConfigurationMachineSecretsCertsK8sInput interface {
	pulumi.Input

	ToConfigurationMachineSecretsCertsK8sOutput() ConfigurationMachineSecretsCertsK8sOutput
	ToConfigurationMachineSecretsCertsK8sOutputWithContext(context.Context) ConfigurationMachineSecretsCertsK8sOutput
}

type ConfigurationMachineSecretsCertsK8sArgs struct {
	// certificate data
	Cert pulumi.StringInput `pulumi:"cert"`
	// key data
	Key pulumi.StringInput `pulumi:"key"`
}

func (ConfigurationMachineSecretsCertsK8sArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationMachineSecretsCertsK8s)(nil)).Elem()
}

func (i ConfigurationMachineSecretsCertsK8sArgs) ToConfigurationMachineSecretsCertsK8sOutput() ConfigurationMachineSecretsCertsK8sOutput {
	return i.ToConfigurationMachineSecretsCertsK8sOutputWithContext(context.Background())
}

func (i ConfigurationMachineSecretsCertsK8sArgs) ToConfigurationMachineSecretsCertsK8sOutputWithContext(ctx context.Context) ConfigurationMachineSecretsCertsK8sOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationMachineSecretsCertsK8sOutput)
}

func (i ConfigurationMachineSecretsCertsK8sArgs) ToOutput(ctx context.Context) pulumix.Output[ConfigurationMachineSecretsCertsK8s] {
	return pulumix.Output[ConfigurationMachineSecretsCertsK8s]{
		OutputState: i.ToConfigurationMachineSecretsCertsK8sOutputWithContext(ctx).OutputState,
	}
}

type ConfigurationMachineSecretsCertsK8sOutput struct{ *pulumi.OutputState }

func (ConfigurationMachineSecretsCertsK8sOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationMachineSecretsCertsK8s)(nil)).Elem()
}

func (o ConfigurationMachineSecretsCertsK8sOutput) ToConfigurationMachineSecretsCertsK8sOutput() ConfigurationMachineSecretsCertsK8sOutput {
	return o
}

func (o ConfigurationMachineSecretsCertsK8sOutput) ToConfigurationMachineSecretsCertsK8sOutputWithContext(ctx context.Context) ConfigurationMachineSecretsCertsK8sOutput {
	return o
}

func (o ConfigurationMachineSecretsCertsK8sOutput) ToOutput(ctx context.Context) pulumix.Output[ConfigurationMachineSecretsCertsK8s] {
	return pulumix.Output[ConfigurationMachineSecretsCertsK8s]{
		OutputState: o.OutputState,
	}
}

// certificate data
func (o ConfigurationMachineSecretsCertsK8sOutput) Cert() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationMachineSecretsCertsK8s) string { return v.Cert }).(pulumi.StringOutput)
}

// key data
func (o ConfigurationMachineSecretsCertsK8sOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationMachineSecretsCertsK8s) string { return v.Key }).(pulumi.StringOutput)
}

type ConfigurationMachineSecretsCertsK8sAggregator struct {
	// certificate data
	Cert string `pulumi:"cert"`
	// key data
	Key string `pulumi:"key"`
}

// ConfigurationMachineSecretsCertsK8sAggregatorInput is an input type that accepts ConfigurationMachineSecretsCertsK8sAggregatorArgs and ConfigurationMachineSecretsCertsK8sAggregatorOutput values.
// You can construct a concrete instance of `ConfigurationMachineSecretsCertsK8sAggregatorInput` via:
//
//	ConfigurationMachineSecretsCertsK8sAggregatorArgs{...}
type ConfigurationMachineSecretsCertsK8sAggregatorInput interface {
	pulumi.Input

	ToConfigurationMachineSecretsCertsK8sAggregatorOutput() ConfigurationMachineSecretsCertsK8sAggregatorOutput
	ToConfigurationMachineSecretsCertsK8sAggregatorOutputWithContext(context.Context) ConfigurationMachineSecretsCertsK8sAggregatorOutput
}

type ConfigurationMachineSecretsCertsK8sAggregatorArgs struct {
	// certificate data
	Cert pulumi.StringInput `pulumi:"cert"`
	// key data
	Key pulumi.StringInput `pulumi:"key"`
}

func (ConfigurationMachineSecretsCertsK8sAggregatorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationMachineSecretsCertsK8sAggregator)(nil)).Elem()
}

func (i ConfigurationMachineSecretsCertsK8sAggregatorArgs) ToConfigurationMachineSecretsCertsK8sAggregatorOutput() ConfigurationMachineSecretsCertsK8sAggregatorOutput {
	return i.ToConfigurationMachineSecretsCertsK8sAggregatorOutputWithContext(context.Background())
}

func (i ConfigurationMachineSecretsCertsK8sAggregatorArgs) ToConfigurationMachineSecretsCertsK8sAggregatorOutputWithContext(ctx context.Context) ConfigurationMachineSecretsCertsK8sAggregatorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationMachineSecretsCertsK8sAggregatorOutput)
}

func (i ConfigurationMachineSecretsCertsK8sAggregatorArgs) ToOutput(ctx context.Context) pulumix.Output[ConfigurationMachineSecretsCertsK8sAggregator] {
	return pulumix.Output[ConfigurationMachineSecretsCertsK8sAggregator]{
		OutputState: i.ToConfigurationMachineSecretsCertsK8sAggregatorOutputWithContext(ctx).OutputState,
	}
}

type ConfigurationMachineSecretsCertsK8sAggregatorOutput struct{ *pulumi.OutputState }

func (ConfigurationMachineSecretsCertsK8sAggregatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationMachineSecretsCertsK8sAggregator)(nil)).Elem()
}

func (o ConfigurationMachineSecretsCertsK8sAggregatorOutput) ToConfigurationMachineSecretsCertsK8sAggregatorOutput() ConfigurationMachineSecretsCertsK8sAggregatorOutput {
	return o
}

func (o ConfigurationMachineSecretsCertsK8sAggregatorOutput) ToConfigurationMachineSecretsCertsK8sAggregatorOutputWithContext(ctx context.Context) ConfigurationMachineSecretsCertsK8sAggregatorOutput {
	return o
}

func (o ConfigurationMachineSecretsCertsK8sAggregatorOutput) ToOutput(ctx context.Context) pulumix.Output[ConfigurationMachineSecretsCertsK8sAggregator] {
	return pulumix.Output[ConfigurationMachineSecretsCertsK8sAggregator]{
		OutputState: o.OutputState,
	}
}

// certificate data
func (o ConfigurationMachineSecretsCertsK8sAggregatorOutput) Cert() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationMachineSecretsCertsK8sAggregator) string { return v.Cert }).(pulumi.StringOutput)
}

// key data
func (o ConfigurationMachineSecretsCertsK8sAggregatorOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationMachineSecretsCertsK8sAggregator) string { return v.Key }).(pulumi.StringOutput)
}

type ConfigurationMachineSecretsCertsK8sServiceaccount struct {
	// key data
	Key string `pulumi:"key"`
}

// ConfigurationMachineSecretsCertsK8sServiceaccountInput is an input type that accepts ConfigurationMachineSecretsCertsK8sServiceaccountArgs and ConfigurationMachineSecretsCertsK8sServiceaccountOutput values.
// You can construct a concrete instance of `ConfigurationMachineSecretsCertsK8sServiceaccountInput` via:
//
//	ConfigurationMachineSecretsCertsK8sServiceaccountArgs{...}
type ConfigurationMachineSecretsCertsK8sServiceaccountInput interface {
	pulumi.Input

	ToConfigurationMachineSecretsCertsK8sServiceaccountOutput() ConfigurationMachineSecretsCertsK8sServiceaccountOutput
	ToConfigurationMachineSecretsCertsK8sServiceaccountOutputWithContext(context.Context) ConfigurationMachineSecretsCertsK8sServiceaccountOutput
}

type ConfigurationMachineSecretsCertsK8sServiceaccountArgs struct {
	// key data
	Key pulumi.StringInput `pulumi:"key"`
}

func (ConfigurationMachineSecretsCertsK8sServiceaccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationMachineSecretsCertsK8sServiceaccount)(nil)).Elem()
}

func (i ConfigurationMachineSecretsCertsK8sServiceaccountArgs) ToConfigurationMachineSecretsCertsK8sServiceaccountOutput() ConfigurationMachineSecretsCertsK8sServiceaccountOutput {
	return i.ToConfigurationMachineSecretsCertsK8sServiceaccountOutputWithContext(context.Background())
}

func (i ConfigurationMachineSecretsCertsK8sServiceaccountArgs) ToConfigurationMachineSecretsCertsK8sServiceaccountOutputWithContext(ctx context.Context) ConfigurationMachineSecretsCertsK8sServiceaccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationMachineSecretsCertsK8sServiceaccountOutput)
}

func (i ConfigurationMachineSecretsCertsK8sServiceaccountArgs) ToOutput(ctx context.Context) pulumix.Output[ConfigurationMachineSecretsCertsK8sServiceaccount] {
	return pulumix.Output[ConfigurationMachineSecretsCertsK8sServiceaccount]{
		OutputState: i.ToConfigurationMachineSecretsCertsK8sServiceaccountOutputWithContext(ctx).OutputState,
	}
}

type ConfigurationMachineSecretsCertsK8sServiceaccountOutput struct{ *pulumi.OutputState }

func (ConfigurationMachineSecretsCertsK8sServiceaccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationMachineSecretsCertsK8sServiceaccount)(nil)).Elem()
}

func (o ConfigurationMachineSecretsCertsK8sServiceaccountOutput) ToConfigurationMachineSecretsCertsK8sServiceaccountOutput() ConfigurationMachineSecretsCertsK8sServiceaccountOutput {
	return o
}

func (o ConfigurationMachineSecretsCertsK8sServiceaccountOutput) ToConfigurationMachineSecretsCertsK8sServiceaccountOutputWithContext(ctx context.Context) ConfigurationMachineSecretsCertsK8sServiceaccountOutput {
	return o
}

func (o ConfigurationMachineSecretsCertsK8sServiceaccountOutput) ToOutput(ctx context.Context) pulumix.Output[ConfigurationMachineSecretsCertsK8sServiceaccount] {
	return pulumix.Output[ConfigurationMachineSecretsCertsK8sServiceaccount]{
		OutputState: o.OutputState,
	}
}

// key data
func (o ConfigurationMachineSecretsCertsK8sServiceaccountOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationMachineSecretsCertsK8sServiceaccount) string { return v.Key }).(pulumi.StringOutput)
}

type ConfigurationMachineSecretsCertsOs struct {
	// certificate data
	Cert string `pulumi:"cert"`
	// key data
	Key string `pulumi:"key"`
}

// ConfigurationMachineSecretsCertsOsInput is an input type that accepts ConfigurationMachineSecretsCertsOsArgs and ConfigurationMachineSecretsCertsOsOutput values.
// You can construct a concrete instance of `ConfigurationMachineSecretsCertsOsInput` via:
//
//	ConfigurationMachineSecretsCertsOsArgs{...}
type ConfigurationMachineSecretsCertsOsInput interface {
	pulumi.Input

	ToConfigurationMachineSecretsCertsOsOutput() ConfigurationMachineSecretsCertsOsOutput
	ToConfigurationMachineSecretsCertsOsOutputWithContext(context.Context) ConfigurationMachineSecretsCertsOsOutput
}

type ConfigurationMachineSecretsCertsOsArgs struct {
	// certificate data
	Cert pulumi.StringInput `pulumi:"cert"`
	// key data
	Key pulumi.StringInput `pulumi:"key"`
}

func (ConfigurationMachineSecretsCertsOsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationMachineSecretsCertsOs)(nil)).Elem()
}

func (i ConfigurationMachineSecretsCertsOsArgs) ToConfigurationMachineSecretsCertsOsOutput() ConfigurationMachineSecretsCertsOsOutput {
	return i.ToConfigurationMachineSecretsCertsOsOutputWithContext(context.Background())
}

func (i ConfigurationMachineSecretsCertsOsArgs) ToConfigurationMachineSecretsCertsOsOutputWithContext(ctx context.Context) ConfigurationMachineSecretsCertsOsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationMachineSecretsCertsOsOutput)
}

func (i ConfigurationMachineSecretsCertsOsArgs) ToOutput(ctx context.Context) pulumix.Output[ConfigurationMachineSecretsCertsOs] {
	return pulumix.Output[ConfigurationMachineSecretsCertsOs]{
		OutputState: i.ToConfigurationMachineSecretsCertsOsOutputWithContext(ctx).OutputState,
	}
}

type ConfigurationMachineSecretsCertsOsOutput struct{ *pulumi.OutputState }

func (ConfigurationMachineSecretsCertsOsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationMachineSecretsCertsOs)(nil)).Elem()
}

func (o ConfigurationMachineSecretsCertsOsOutput) ToConfigurationMachineSecretsCertsOsOutput() ConfigurationMachineSecretsCertsOsOutput {
	return o
}

func (o ConfigurationMachineSecretsCertsOsOutput) ToConfigurationMachineSecretsCertsOsOutputWithContext(ctx context.Context) ConfigurationMachineSecretsCertsOsOutput {
	return o
}

func (o ConfigurationMachineSecretsCertsOsOutput) ToOutput(ctx context.Context) pulumix.Output[ConfigurationMachineSecretsCertsOs] {
	return pulumix.Output[ConfigurationMachineSecretsCertsOs]{
		OutputState: o.OutputState,
	}
}

// certificate data
func (o ConfigurationMachineSecretsCertsOsOutput) Cert() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationMachineSecretsCertsOs) string { return v.Cert }).(pulumi.StringOutput)
}

// key data
func (o ConfigurationMachineSecretsCertsOsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationMachineSecretsCertsOs) string { return v.Key }).(pulumi.StringOutput)
}

type ConfigurationMachineSecretsCluster struct {
	// The cluster id
	Id string `pulumi:"id"`
	// The cluster secret
	Secret string `pulumi:"secret"`
}

// ConfigurationMachineSecretsClusterInput is an input type that accepts ConfigurationMachineSecretsClusterArgs and ConfigurationMachineSecretsClusterOutput values.
// You can construct a concrete instance of `ConfigurationMachineSecretsClusterInput` via:
//
//	ConfigurationMachineSecretsClusterArgs{...}
type ConfigurationMachineSecretsClusterInput interface {
	pulumi.Input

	ToConfigurationMachineSecretsClusterOutput() ConfigurationMachineSecretsClusterOutput
	ToConfigurationMachineSecretsClusterOutputWithContext(context.Context) ConfigurationMachineSecretsClusterOutput
}

type ConfigurationMachineSecretsClusterArgs struct {
	// The cluster id
	Id pulumi.StringInput `pulumi:"id"`
	// The cluster secret
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (ConfigurationMachineSecretsClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationMachineSecretsCluster)(nil)).Elem()
}

func (i ConfigurationMachineSecretsClusterArgs) ToConfigurationMachineSecretsClusterOutput() ConfigurationMachineSecretsClusterOutput {
	return i.ToConfigurationMachineSecretsClusterOutputWithContext(context.Background())
}

func (i ConfigurationMachineSecretsClusterArgs) ToConfigurationMachineSecretsClusterOutputWithContext(ctx context.Context) ConfigurationMachineSecretsClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationMachineSecretsClusterOutput)
}

func (i ConfigurationMachineSecretsClusterArgs) ToOutput(ctx context.Context) pulumix.Output[ConfigurationMachineSecretsCluster] {
	return pulumix.Output[ConfigurationMachineSecretsCluster]{
		OutputState: i.ToConfigurationMachineSecretsClusterOutputWithContext(ctx).OutputState,
	}
}

type ConfigurationMachineSecretsClusterOutput struct{ *pulumi.OutputState }

func (ConfigurationMachineSecretsClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationMachineSecretsCluster)(nil)).Elem()
}

func (o ConfigurationMachineSecretsClusterOutput) ToConfigurationMachineSecretsClusterOutput() ConfigurationMachineSecretsClusterOutput {
	return o
}

func (o ConfigurationMachineSecretsClusterOutput) ToConfigurationMachineSecretsClusterOutputWithContext(ctx context.Context) ConfigurationMachineSecretsClusterOutput {
	return o
}

func (o ConfigurationMachineSecretsClusterOutput) ToOutput(ctx context.Context) pulumix.Output[ConfigurationMachineSecretsCluster] {
	return pulumix.Output[ConfigurationMachineSecretsCluster]{
		OutputState: o.OutputState,
	}
}

// The cluster id
func (o ConfigurationMachineSecretsClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationMachineSecretsCluster) string { return v.Id }).(pulumi.StringOutput)
}

// The cluster secret
func (o ConfigurationMachineSecretsClusterOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationMachineSecretsCluster) string { return v.Secret }).(pulumi.StringOutput)
}

type ConfigurationMachineSecretsSecrets struct {
	// The aescbc encryption secret for the talos kubernetes cluster
	AescbcEncryptionSecret *string `pulumi:"aescbcEncryptionSecret"`
	// The bootstrap token for the talos kubernetes cluster
	BootstrapToken string `pulumi:"bootstrapToken"`
	// The secretbox encryption secret for the talos kubernetes cluster
	SecretboxEncryptionSecret string `pulumi:"secretboxEncryptionSecret"`
}

// ConfigurationMachineSecretsSecretsInput is an input type that accepts ConfigurationMachineSecretsSecretsArgs and ConfigurationMachineSecretsSecretsOutput values.
// You can construct a concrete instance of `ConfigurationMachineSecretsSecretsInput` via:
//
//	ConfigurationMachineSecretsSecretsArgs{...}
type ConfigurationMachineSecretsSecretsInput interface {
	pulumi.Input

	ToConfigurationMachineSecretsSecretsOutput() ConfigurationMachineSecretsSecretsOutput
	ToConfigurationMachineSecretsSecretsOutputWithContext(context.Context) ConfigurationMachineSecretsSecretsOutput
}

type ConfigurationMachineSecretsSecretsArgs struct {
	// The aescbc encryption secret for the talos kubernetes cluster
	AescbcEncryptionSecret pulumi.StringPtrInput `pulumi:"aescbcEncryptionSecret"`
	// The bootstrap token for the talos kubernetes cluster
	BootstrapToken pulumi.StringInput `pulumi:"bootstrapToken"`
	// The secretbox encryption secret for the talos kubernetes cluster
	SecretboxEncryptionSecret pulumi.StringInput `pulumi:"secretboxEncryptionSecret"`
}

func (ConfigurationMachineSecretsSecretsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationMachineSecretsSecrets)(nil)).Elem()
}

func (i ConfigurationMachineSecretsSecretsArgs) ToConfigurationMachineSecretsSecretsOutput() ConfigurationMachineSecretsSecretsOutput {
	return i.ToConfigurationMachineSecretsSecretsOutputWithContext(context.Background())
}

func (i ConfigurationMachineSecretsSecretsArgs) ToConfigurationMachineSecretsSecretsOutputWithContext(ctx context.Context) ConfigurationMachineSecretsSecretsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationMachineSecretsSecretsOutput)
}

func (i ConfigurationMachineSecretsSecretsArgs) ToOutput(ctx context.Context) pulumix.Output[ConfigurationMachineSecretsSecrets] {
	return pulumix.Output[ConfigurationMachineSecretsSecrets]{
		OutputState: i.ToConfigurationMachineSecretsSecretsOutputWithContext(ctx).OutputState,
	}
}

type ConfigurationMachineSecretsSecretsOutput struct{ *pulumi.OutputState }

func (ConfigurationMachineSecretsSecretsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationMachineSecretsSecrets)(nil)).Elem()
}

func (o ConfigurationMachineSecretsSecretsOutput) ToConfigurationMachineSecretsSecretsOutput() ConfigurationMachineSecretsSecretsOutput {
	return o
}

func (o ConfigurationMachineSecretsSecretsOutput) ToConfigurationMachineSecretsSecretsOutputWithContext(ctx context.Context) ConfigurationMachineSecretsSecretsOutput {
	return o
}

func (o ConfigurationMachineSecretsSecretsOutput) ToOutput(ctx context.Context) pulumix.Output[ConfigurationMachineSecretsSecrets] {
	return pulumix.Output[ConfigurationMachineSecretsSecrets]{
		OutputState: o.OutputState,
	}
}

// The aescbc encryption secret for the talos kubernetes cluster
func (o ConfigurationMachineSecretsSecretsOutput) AescbcEncryptionSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationMachineSecretsSecrets) *string { return v.AescbcEncryptionSecret }).(pulumi.StringPtrOutput)
}

// The bootstrap token for the talos kubernetes cluster
func (o ConfigurationMachineSecretsSecretsOutput) BootstrapToken() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationMachineSecretsSecrets) string { return v.BootstrapToken }).(pulumi.StringOutput)
}

// The secretbox encryption secret for the talos kubernetes cluster
func (o ConfigurationMachineSecretsSecretsOutput) SecretboxEncryptionSecret() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationMachineSecretsSecrets) string { return v.SecretboxEncryptionSecret }).(pulumi.StringOutput)
}

type ConfigurationMachineSecretsTrustdinfo struct {
	// The trustd token for the talos kubernetes cluster
	Token string `pulumi:"token"`
}

// ConfigurationMachineSecretsTrustdinfoInput is an input type that accepts ConfigurationMachineSecretsTrustdinfoArgs and ConfigurationMachineSecretsTrustdinfoOutput values.
// You can construct a concrete instance of `ConfigurationMachineSecretsTrustdinfoInput` via:
//
//	ConfigurationMachineSecretsTrustdinfoArgs{...}
type ConfigurationMachineSecretsTrustdinfoInput interface {
	pulumi.Input

	ToConfigurationMachineSecretsTrustdinfoOutput() ConfigurationMachineSecretsTrustdinfoOutput
	ToConfigurationMachineSecretsTrustdinfoOutputWithContext(context.Context) ConfigurationMachineSecretsTrustdinfoOutput
}

type ConfigurationMachineSecretsTrustdinfoArgs struct {
	// The trustd token for the talos kubernetes cluster
	Token pulumi.StringInput `pulumi:"token"`
}

func (ConfigurationMachineSecretsTrustdinfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationMachineSecretsTrustdinfo)(nil)).Elem()
}

func (i ConfigurationMachineSecretsTrustdinfoArgs) ToConfigurationMachineSecretsTrustdinfoOutput() ConfigurationMachineSecretsTrustdinfoOutput {
	return i.ToConfigurationMachineSecretsTrustdinfoOutputWithContext(context.Background())
}

func (i ConfigurationMachineSecretsTrustdinfoArgs) ToConfigurationMachineSecretsTrustdinfoOutputWithContext(ctx context.Context) ConfigurationMachineSecretsTrustdinfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationMachineSecretsTrustdinfoOutput)
}

func (i ConfigurationMachineSecretsTrustdinfoArgs) ToOutput(ctx context.Context) pulumix.Output[ConfigurationMachineSecretsTrustdinfo] {
	return pulumix.Output[ConfigurationMachineSecretsTrustdinfo]{
		OutputState: i.ToConfigurationMachineSecretsTrustdinfoOutputWithContext(ctx).OutputState,
	}
}

type ConfigurationMachineSecretsTrustdinfoOutput struct{ *pulumi.OutputState }

func (ConfigurationMachineSecretsTrustdinfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationMachineSecretsTrustdinfo)(nil)).Elem()
}

func (o ConfigurationMachineSecretsTrustdinfoOutput) ToConfigurationMachineSecretsTrustdinfoOutput() ConfigurationMachineSecretsTrustdinfoOutput {
	return o
}

func (o ConfigurationMachineSecretsTrustdinfoOutput) ToConfigurationMachineSecretsTrustdinfoOutputWithContext(ctx context.Context) ConfigurationMachineSecretsTrustdinfoOutput {
	return o
}

func (o ConfigurationMachineSecretsTrustdinfoOutput) ToOutput(ctx context.Context) pulumix.Output[ConfigurationMachineSecretsTrustdinfo] {
	return pulumix.Output[ConfigurationMachineSecretsTrustdinfo]{
		OutputState: o.OutputState,
	}
}

// The trustd token for the talos kubernetes cluster
func (o ConfigurationMachineSecretsTrustdinfoOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationMachineSecretsTrustdinfo) string { return v.Token }).(pulumi.StringOutput)
}

type DisksClientConfiguration struct {
	// The client CA certificate
	CaCertificate string `pulumi:"caCertificate"`
	// The client certificate
	ClientCertificate string `pulumi:"clientCertificate"`
	// The client key
	ClientKey string `pulumi:"clientKey"`
}

// DisksClientConfigurationInput is an input type that accepts DisksClientConfigurationArgs and DisksClientConfigurationOutput values.
// You can construct a concrete instance of `DisksClientConfigurationInput` via:
//
//	DisksClientConfigurationArgs{...}
type DisksClientConfigurationInput interface {
	pulumi.Input

	ToDisksClientConfigurationOutput() DisksClientConfigurationOutput
	ToDisksClientConfigurationOutputWithContext(context.Context) DisksClientConfigurationOutput
}

type DisksClientConfigurationArgs struct {
	// The client CA certificate
	CaCertificate pulumi.StringInput `pulumi:"caCertificate"`
	// The client certificate
	ClientCertificate pulumi.StringInput `pulumi:"clientCertificate"`
	// The client key
	ClientKey pulumi.StringInput `pulumi:"clientKey"`
}

func (DisksClientConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DisksClientConfiguration)(nil)).Elem()
}

func (i DisksClientConfigurationArgs) ToDisksClientConfigurationOutput() DisksClientConfigurationOutput {
	return i.ToDisksClientConfigurationOutputWithContext(context.Background())
}

func (i DisksClientConfigurationArgs) ToDisksClientConfigurationOutputWithContext(ctx context.Context) DisksClientConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DisksClientConfigurationOutput)
}

func (i DisksClientConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[DisksClientConfiguration] {
	return pulumix.Output[DisksClientConfiguration]{
		OutputState: i.ToDisksClientConfigurationOutputWithContext(ctx).OutputState,
	}
}

type DisksClientConfigurationOutput struct{ *pulumi.OutputState }

func (DisksClientConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DisksClientConfiguration)(nil)).Elem()
}

func (o DisksClientConfigurationOutput) ToDisksClientConfigurationOutput() DisksClientConfigurationOutput {
	return o
}

func (o DisksClientConfigurationOutput) ToDisksClientConfigurationOutputWithContext(ctx context.Context) DisksClientConfigurationOutput {
	return o
}

func (o DisksClientConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[DisksClientConfiguration] {
	return pulumix.Output[DisksClientConfiguration]{
		OutputState: o.OutputState,
	}
}

// The client CA certificate
func (o DisksClientConfigurationOutput) CaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v DisksClientConfiguration) string { return v.CaCertificate }).(pulumi.StringOutput)
}

// The client certificate
func (o DisksClientConfigurationOutput) ClientCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v DisksClientConfiguration) string { return v.ClientCertificate }).(pulumi.StringOutput)
}

// The client key
func (o DisksClientConfigurationOutput) ClientKey() pulumi.StringOutput {
	return o.ApplyT(func(v DisksClientConfiguration) string { return v.ClientKey }).(pulumi.StringOutput)
}

type DisksDisk struct {
	// The bus path of the disk
	BusPath string `pulumi:"busPath"`
	// The modalias of the disk
	Modalias string `pulumi:"modalias"`
	// The model of the disk
	Model string `pulumi:"model"`
	// The name of the disk
	Name string `pulumi:"name"`
	// The serial number of the disk
	Serial string `pulumi:"serial"`
	// The size of the disk
	Size string `pulumi:"size"`
	// The type of the disk
	Type string `pulumi:"type"`
	// The uuid of the disk
	Uuid string `pulumi:"uuid"`
	// The wwid of the disk
	Wwid string `pulumi:"wwid"`
}

// DisksDiskInput is an input type that accepts DisksDiskArgs and DisksDiskOutput values.
// You can construct a concrete instance of `DisksDiskInput` via:
//
//	DisksDiskArgs{...}
type DisksDiskInput interface {
	pulumi.Input

	ToDisksDiskOutput() DisksDiskOutput
	ToDisksDiskOutputWithContext(context.Context) DisksDiskOutput
}

type DisksDiskArgs struct {
	// The bus path of the disk
	BusPath pulumi.StringInput `pulumi:"busPath"`
	// The modalias of the disk
	Modalias pulumi.StringInput `pulumi:"modalias"`
	// The model of the disk
	Model pulumi.StringInput `pulumi:"model"`
	// The name of the disk
	Name pulumi.StringInput `pulumi:"name"`
	// The serial number of the disk
	Serial pulumi.StringInput `pulumi:"serial"`
	// The size of the disk
	Size pulumi.StringInput `pulumi:"size"`
	// The type of the disk
	Type pulumi.StringInput `pulumi:"type"`
	// The uuid of the disk
	Uuid pulumi.StringInput `pulumi:"uuid"`
	// The wwid of the disk
	Wwid pulumi.StringInput `pulumi:"wwid"`
}

func (DisksDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DisksDisk)(nil)).Elem()
}

func (i DisksDiskArgs) ToDisksDiskOutput() DisksDiskOutput {
	return i.ToDisksDiskOutputWithContext(context.Background())
}

func (i DisksDiskArgs) ToDisksDiskOutputWithContext(ctx context.Context) DisksDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DisksDiskOutput)
}

func (i DisksDiskArgs) ToOutput(ctx context.Context) pulumix.Output[DisksDisk] {
	return pulumix.Output[DisksDisk]{
		OutputState: i.ToDisksDiskOutputWithContext(ctx).OutputState,
	}
}

// DisksDiskArrayInput is an input type that accepts DisksDiskArray and DisksDiskArrayOutput values.
// You can construct a concrete instance of `DisksDiskArrayInput` via:
//
//	DisksDiskArray{ DisksDiskArgs{...} }
type DisksDiskArrayInput interface {
	pulumi.Input

	ToDisksDiskArrayOutput() DisksDiskArrayOutput
	ToDisksDiskArrayOutputWithContext(context.Context) DisksDiskArrayOutput
}

type DisksDiskArray []DisksDiskInput

func (DisksDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DisksDisk)(nil)).Elem()
}

func (i DisksDiskArray) ToDisksDiskArrayOutput() DisksDiskArrayOutput {
	return i.ToDisksDiskArrayOutputWithContext(context.Background())
}

func (i DisksDiskArray) ToDisksDiskArrayOutputWithContext(ctx context.Context) DisksDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DisksDiskArrayOutput)
}

func (i DisksDiskArray) ToOutput(ctx context.Context) pulumix.Output[[]DisksDisk] {
	return pulumix.Output[[]DisksDisk]{
		OutputState: i.ToDisksDiskArrayOutputWithContext(ctx).OutputState,
	}
}

type DisksDiskOutput struct{ *pulumi.OutputState }

func (DisksDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DisksDisk)(nil)).Elem()
}

func (o DisksDiskOutput) ToDisksDiskOutput() DisksDiskOutput {
	return o
}

func (o DisksDiskOutput) ToDisksDiskOutputWithContext(ctx context.Context) DisksDiskOutput {
	return o
}

func (o DisksDiskOutput) ToOutput(ctx context.Context) pulumix.Output[DisksDisk] {
	return pulumix.Output[DisksDisk]{
		OutputState: o.OutputState,
	}
}

// The bus path of the disk
func (o DisksDiskOutput) BusPath() pulumi.StringOutput {
	return o.ApplyT(func(v DisksDisk) string { return v.BusPath }).(pulumi.StringOutput)
}

// The modalias of the disk
func (o DisksDiskOutput) Modalias() pulumi.StringOutput {
	return o.ApplyT(func(v DisksDisk) string { return v.Modalias }).(pulumi.StringOutput)
}

// The model of the disk
func (o DisksDiskOutput) Model() pulumi.StringOutput {
	return o.ApplyT(func(v DisksDisk) string { return v.Model }).(pulumi.StringOutput)
}

// The name of the disk
func (o DisksDiskOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DisksDisk) string { return v.Name }).(pulumi.StringOutput)
}

// The serial number of the disk
func (o DisksDiskOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v DisksDisk) string { return v.Serial }).(pulumi.StringOutput)
}

// The size of the disk
func (o DisksDiskOutput) Size() pulumi.StringOutput {
	return o.ApplyT(func(v DisksDisk) string { return v.Size }).(pulumi.StringOutput)
}

// The type of the disk
func (o DisksDiskOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DisksDisk) string { return v.Type }).(pulumi.StringOutput)
}

// The uuid of the disk
func (o DisksDiskOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v DisksDisk) string { return v.Uuid }).(pulumi.StringOutput)
}

// The wwid of the disk
func (o DisksDiskOutput) Wwid() pulumi.StringOutput {
	return o.ApplyT(func(v DisksDisk) string { return v.Wwid }).(pulumi.StringOutput)
}

type DisksDiskArrayOutput struct{ *pulumi.OutputState }

func (DisksDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DisksDisk)(nil)).Elem()
}

func (o DisksDiskArrayOutput) ToDisksDiskArrayOutput() DisksDiskArrayOutput {
	return o
}

func (o DisksDiskArrayOutput) ToDisksDiskArrayOutputWithContext(ctx context.Context) DisksDiskArrayOutput {
	return o
}

func (o DisksDiskArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DisksDisk] {
	return pulumix.Output[[]DisksDisk]{
		OutputState: o.OutputState,
	}
}

func (o DisksDiskArrayOutput) Index(i pulumi.IntInput) DisksDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DisksDisk {
		return vs[0].([]DisksDisk)[vs[1].(int)]
	}).(DisksDiskOutput)
}

type DisksFilters struct {
	// Filter disks by bus path
	BusPath *string `pulumi:"busPath"`
	// Filter disks by modalias
	Modalias *string `pulumi:"modalias"`
	// Filter disks by model
	Model *string `pulumi:"model"`
	// Filter disks by name
	Name *string `pulumi:"name"`
	// Filter disks by serial number
	Serial *string `pulumi:"serial"`
	// Filter disks by size
	Size *string `pulumi:"size"`
	// Filter disks by type
	Type *string `pulumi:"type"`
	// Filter disks by uuid
	Uuid *string `pulumi:"uuid"`
	// Filter disks by wwid
	Wwid *string `pulumi:"wwid"`
}

// DisksFiltersInput is an input type that accepts DisksFiltersArgs and DisksFiltersOutput values.
// You can construct a concrete instance of `DisksFiltersInput` via:
//
//	DisksFiltersArgs{...}
type DisksFiltersInput interface {
	pulumi.Input

	ToDisksFiltersOutput() DisksFiltersOutput
	ToDisksFiltersOutputWithContext(context.Context) DisksFiltersOutput
}

type DisksFiltersArgs struct {
	// Filter disks by bus path
	BusPath pulumi.StringPtrInput `pulumi:"busPath"`
	// Filter disks by modalias
	Modalias pulumi.StringPtrInput `pulumi:"modalias"`
	// Filter disks by model
	Model pulumi.StringPtrInput `pulumi:"model"`
	// Filter disks by name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Filter disks by serial number
	Serial pulumi.StringPtrInput `pulumi:"serial"`
	// Filter disks by size
	Size pulumi.StringPtrInput `pulumi:"size"`
	// Filter disks by type
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Filter disks by uuid
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
	// Filter disks by wwid
	Wwid pulumi.StringPtrInput `pulumi:"wwid"`
}

func (DisksFiltersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DisksFilters)(nil)).Elem()
}

func (i DisksFiltersArgs) ToDisksFiltersOutput() DisksFiltersOutput {
	return i.ToDisksFiltersOutputWithContext(context.Background())
}

func (i DisksFiltersArgs) ToDisksFiltersOutputWithContext(ctx context.Context) DisksFiltersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DisksFiltersOutput)
}

func (i DisksFiltersArgs) ToOutput(ctx context.Context) pulumix.Output[DisksFilters] {
	return pulumix.Output[DisksFilters]{
		OutputState: i.ToDisksFiltersOutputWithContext(ctx).OutputState,
	}
}

func (i DisksFiltersArgs) ToDisksFiltersPtrOutput() DisksFiltersPtrOutput {
	return i.ToDisksFiltersPtrOutputWithContext(context.Background())
}

func (i DisksFiltersArgs) ToDisksFiltersPtrOutputWithContext(ctx context.Context) DisksFiltersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DisksFiltersOutput).ToDisksFiltersPtrOutputWithContext(ctx)
}

// DisksFiltersPtrInput is an input type that accepts DisksFiltersArgs, DisksFiltersPtr and DisksFiltersPtrOutput values.
// You can construct a concrete instance of `DisksFiltersPtrInput` via:
//
//	        DisksFiltersArgs{...}
//
//	or:
//
//	        nil
type DisksFiltersPtrInput interface {
	pulumi.Input

	ToDisksFiltersPtrOutput() DisksFiltersPtrOutput
	ToDisksFiltersPtrOutputWithContext(context.Context) DisksFiltersPtrOutput
}

type disksFiltersPtrType DisksFiltersArgs

func DisksFiltersPtr(v *DisksFiltersArgs) DisksFiltersPtrInput {
	return (*disksFiltersPtrType)(v)
}

func (*disksFiltersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DisksFilters)(nil)).Elem()
}

func (i *disksFiltersPtrType) ToDisksFiltersPtrOutput() DisksFiltersPtrOutput {
	return i.ToDisksFiltersPtrOutputWithContext(context.Background())
}

func (i *disksFiltersPtrType) ToDisksFiltersPtrOutputWithContext(ctx context.Context) DisksFiltersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DisksFiltersPtrOutput)
}

func (i *disksFiltersPtrType) ToOutput(ctx context.Context) pulumix.Output[*DisksFilters] {
	return pulumix.Output[*DisksFilters]{
		OutputState: i.ToDisksFiltersPtrOutputWithContext(ctx).OutputState,
	}
}

type DisksFiltersOutput struct{ *pulumi.OutputState }

func (DisksFiltersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DisksFilters)(nil)).Elem()
}

func (o DisksFiltersOutput) ToDisksFiltersOutput() DisksFiltersOutput {
	return o
}

func (o DisksFiltersOutput) ToDisksFiltersOutputWithContext(ctx context.Context) DisksFiltersOutput {
	return o
}

func (o DisksFiltersOutput) ToDisksFiltersPtrOutput() DisksFiltersPtrOutput {
	return o.ToDisksFiltersPtrOutputWithContext(context.Background())
}

func (o DisksFiltersOutput) ToDisksFiltersPtrOutputWithContext(ctx context.Context) DisksFiltersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DisksFilters) *DisksFilters {
		return &v
	}).(DisksFiltersPtrOutput)
}

func (o DisksFiltersOutput) ToOutput(ctx context.Context) pulumix.Output[DisksFilters] {
	return pulumix.Output[DisksFilters]{
		OutputState: o.OutputState,
	}
}

// Filter disks by bus path
func (o DisksFiltersOutput) BusPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DisksFilters) *string { return v.BusPath }).(pulumi.StringPtrOutput)
}

// Filter disks by modalias
func (o DisksFiltersOutput) Modalias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DisksFilters) *string { return v.Modalias }).(pulumi.StringPtrOutput)
}

// Filter disks by model
func (o DisksFiltersOutput) Model() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DisksFilters) *string { return v.Model }).(pulumi.StringPtrOutput)
}

// Filter disks by name
func (o DisksFiltersOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DisksFilters) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Filter disks by serial number
func (o DisksFiltersOutput) Serial() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DisksFilters) *string { return v.Serial }).(pulumi.StringPtrOutput)
}

// Filter disks by size
func (o DisksFiltersOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DisksFilters) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// Filter disks by type
func (o DisksFiltersOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DisksFilters) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Filter disks by uuid
func (o DisksFiltersOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DisksFilters) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

// Filter disks by wwid
func (o DisksFiltersOutput) Wwid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DisksFilters) *string { return v.Wwid }).(pulumi.StringPtrOutput)
}

type DisksFiltersPtrOutput struct{ *pulumi.OutputState }

func (DisksFiltersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DisksFilters)(nil)).Elem()
}

func (o DisksFiltersPtrOutput) ToDisksFiltersPtrOutput() DisksFiltersPtrOutput {
	return o
}

func (o DisksFiltersPtrOutput) ToDisksFiltersPtrOutputWithContext(ctx context.Context) DisksFiltersPtrOutput {
	return o
}

func (o DisksFiltersPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DisksFilters] {
	return pulumix.Output[*DisksFilters]{
		OutputState: o.OutputState,
	}
}

func (o DisksFiltersPtrOutput) Elem() DisksFiltersOutput {
	return o.ApplyT(func(v *DisksFilters) DisksFilters {
		if v != nil {
			return *v
		}
		var ret DisksFilters
		return ret
	}).(DisksFiltersOutput)
}

// Filter disks by bus path
func (o DisksFiltersPtrOutput) BusPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DisksFilters) *string {
		if v == nil {
			return nil
		}
		return v.BusPath
	}).(pulumi.StringPtrOutput)
}

// Filter disks by modalias
func (o DisksFiltersPtrOutput) Modalias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DisksFilters) *string {
		if v == nil {
			return nil
		}
		return v.Modalias
	}).(pulumi.StringPtrOutput)
}

// Filter disks by model
func (o DisksFiltersPtrOutput) Model() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DisksFilters) *string {
		if v == nil {
			return nil
		}
		return v.Model
	}).(pulumi.StringPtrOutput)
}

// Filter disks by name
func (o DisksFiltersPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DisksFilters) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Filter disks by serial number
func (o DisksFiltersPtrOutput) Serial() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DisksFilters) *string {
		if v == nil {
			return nil
		}
		return v.Serial
	}).(pulumi.StringPtrOutput)
}

// Filter disks by size
func (o DisksFiltersPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DisksFilters) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// Filter disks by type
func (o DisksFiltersPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DisksFilters) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Filter disks by uuid
func (o DisksFiltersPtrOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DisksFilters) *string {
		if v == nil {
			return nil
		}
		return v.Uuid
	}).(pulumi.StringPtrOutput)
}

// Filter disks by wwid
func (o DisksFiltersPtrOutput) Wwid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DisksFilters) *string {
		if v == nil {
			return nil
		}
		return v.Wwid
	}).(pulumi.StringPtrOutput)
}

type DisksTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
}

// DisksTimeoutsInput is an input type that accepts DisksTimeoutsArgs and DisksTimeoutsOutput values.
// You can construct a concrete instance of `DisksTimeoutsInput` via:
//
//	DisksTimeoutsArgs{...}
type DisksTimeoutsInput interface {
	pulumi.Input

	ToDisksTimeoutsOutput() DisksTimeoutsOutput
	ToDisksTimeoutsOutputWithContext(context.Context) DisksTimeoutsOutput
}

type DisksTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
}

func (DisksTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DisksTimeouts)(nil)).Elem()
}

func (i DisksTimeoutsArgs) ToDisksTimeoutsOutput() DisksTimeoutsOutput {
	return i.ToDisksTimeoutsOutputWithContext(context.Background())
}

func (i DisksTimeoutsArgs) ToDisksTimeoutsOutputWithContext(ctx context.Context) DisksTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DisksTimeoutsOutput)
}

func (i DisksTimeoutsArgs) ToOutput(ctx context.Context) pulumix.Output[DisksTimeouts] {
	return pulumix.Output[DisksTimeouts]{
		OutputState: i.ToDisksTimeoutsOutputWithContext(ctx).OutputState,
	}
}

func (i DisksTimeoutsArgs) ToDisksTimeoutsPtrOutput() DisksTimeoutsPtrOutput {
	return i.ToDisksTimeoutsPtrOutputWithContext(context.Background())
}

func (i DisksTimeoutsArgs) ToDisksTimeoutsPtrOutputWithContext(ctx context.Context) DisksTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DisksTimeoutsOutput).ToDisksTimeoutsPtrOutputWithContext(ctx)
}

// DisksTimeoutsPtrInput is an input type that accepts DisksTimeoutsArgs, DisksTimeoutsPtr and DisksTimeoutsPtrOutput values.
// You can construct a concrete instance of `DisksTimeoutsPtrInput` via:
//
//	        DisksTimeoutsArgs{...}
//
//	or:
//
//	        nil
type DisksTimeoutsPtrInput interface {
	pulumi.Input

	ToDisksTimeoutsPtrOutput() DisksTimeoutsPtrOutput
	ToDisksTimeoutsPtrOutputWithContext(context.Context) DisksTimeoutsPtrOutput
}

type disksTimeoutsPtrType DisksTimeoutsArgs

func DisksTimeoutsPtr(v *DisksTimeoutsArgs) DisksTimeoutsPtrInput {
	return (*disksTimeoutsPtrType)(v)
}

func (*disksTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DisksTimeouts)(nil)).Elem()
}

func (i *disksTimeoutsPtrType) ToDisksTimeoutsPtrOutput() DisksTimeoutsPtrOutput {
	return i.ToDisksTimeoutsPtrOutputWithContext(context.Background())
}

func (i *disksTimeoutsPtrType) ToDisksTimeoutsPtrOutputWithContext(ctx context.Context) DisksTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DisksTimeoutsPtrOutput)
}

func (i *disksTimeoutsPtrType) ToOutput(ctx context.Context) pulumix.Output[*DisksTimeouts] {
	return pulumix.Output[*DisksTimeouts]{
		OutputState: i.ToDisksTimeoutsPtrOutputWithContext(ctx).OutputState,
	}
}

type DisksTimeoutsOutput struct{ *pulumi.OutputState }

func (DisksTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DisksTimeouts)(nil)).Elem()
}

func (o DisksTimeoutsOutput) ToDisksTimeoutsOutput() DisksTimeoutsOutput {
	return o
}

func (o DisksTimeoutsOutput) ToDisksTimeoutsOutputWithContext(ctx context.Context) DisksTimeoutsOutput {
	return o
}

func (o DisksTimeoutsOutput) ToDisksTimeoutsPtrOutput() DisksTimeoutsPtrOutput {
	return o.ToDisksTimeoutsPtrOutputWithContext(context.Background())
}

func (o DisksTimeoutsOutput) ToDisksTimeoutsPtrOutputWithContext(ctx context.Context) DisksTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DisksTimeouts) *DisksTimeouts {
		return &v
	}).(DisksTimeoutsPtrOutput)
}

func (o DisksTimeoutsOutput) ToOutput(ctx context.Context) pulumix.Output[DisksTimeouts] {
	return pulumix.Output[DisksTimeouts]{
		OutputState: o.OutputState,
	}
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o DisksTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DisksTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

type DisksTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (DisksTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DisksTimeouts)(nil)).Elem()
}

func (o DisksTimeoutsPtrOutput) ToDisksTimeoutsPtrOutput() DisksTimeoutsPtrOutput {
	return o
}

func (o DisksTimeoutsPtrOutput) ToDisksTimeoutsPtrOutputWithContext(ctx context.Context) DisksTimeoutsPtrOutput {
	return o
}

func (o DisksTimeoutsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DisksTimeouts] {
	return pulumix.Output[*DisksTimeouts]{
		OutputState: o.OutputState,
	}
}

func (o DisksTimeoutsPtrOutput) Elem() DisksTimeoutsOutput {
	return o.ApplyT(func(v *DisksTimeouts) DisksTimeouts {
		if v != nil {
			return *v
		}
		var ret DisksTimeouts
		return ret
	}).(DisksTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o DisksTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DisksTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

type SecretsClientConfiguration struct {
	// The client CA certificate
	CaCertificate *string `pulumi:"caCertificate"`
	// The client certificate
	ClientCertificate *string `pulumi:"clientCertificate"`
	// The client key
	ClientKey *string `pulumi:"clientKey"`
}

// SecretsClientConfigurationInput is an input type that accepts SecretsClientConfigurationArgs and SecretsClientConfigurationOutput values.
// You can construct a concrete instance of `SecretsClientConfigurationInput` via:
//
//	SecretsClientConfigurationArgs{...}
type SecretsClientConfigurationInput interface {
	pulumi.Input

	ToSecretsClientConfigurationOutput() SecretsClientConfigurationOutput
	ToSecretsClientConfigurationOutputWithContext(context.Context) SecretsClientConfigurationOutput
}

type SecretsClientConfigurationArgs struct {
	// The client CA certificate
	CaCertificate pulumi.StringPtrInput `pulumi:"caCertificate"`
	// The client certificate
	ClientCertificate pulumi.StringPtrInput `pulumi:"clientCertificate"`
	// The client key
	ClientKey pulumi.StringPtrInput `pulumi:"clientKey"`
}

func (SecretsClientConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsClientConfiguration)(nil)).Elem()
}

func (i SecretsClientConfigurationArgs) ToSecretsClientConfigurationOutput() SecretsClientConfigurationOutput {
	return i.ToSecretsClientConfigurationOutputWithContext(context.Background())
}

func (i SecretsClientConfigurationArgs) ToSecretsClientConfigurationOutputWithContext(ctx context.Context) SecretsClientConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsClientConfigurationOutput)
}

func (i SecretsClientConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[SecretsClientConfiguration] {
	return pulumix.Output[SecretsClientConfiguration]{
		OutputState: i.ToSecretsClientConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i SecretsClientConfigurationArgs) ToSecretsClientConfigurationPtrOutput() SecretsClientConfigurationPtrOutput {
	return i.ToSecretsClientConfigurationPtrOutputWithContext(context.Background())
}

func (i SecretsClientConfigurationArgs) ToSecretsClientConfigurationPtrOutputWithContext(ctx context.Context) SecretsClientConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsClientConfigurationOutput).ToSecretsClientConfigurationPtrOutputWithContext(ctx)
}

// SecretsClientConfigurationPtrInput is an input type that accepts SecretsClientConfigurationArgs, SecretsClientConfigurationPtr and SecretsClientConfigurationPtrOutput values.
// You can construct a concrete instance of `SecretsClientConfigurationPtrInput` via:
//
//	        SecretsClientConfigurationArgs{...}
//
//	or:
//
//	        nil
type SecretsClientConfigurationPtrInput interface {
	pulumi.Input

	ToSecretsClientConfigurationPtrOutput() SecretsClientConfigurationPtrOutput
	ToSecretsClientConfigurationPtrOutputWithContext(context.Context) SecretsClientConfigurationPtrOutput
}

type secretsClientConfigurationPtrType SecretsClientConfigurationArgs

func SecretsClientConfigurationPtr(v *SecretsClientConfigurationArgs) SecretsClientConfigurationPtrInput {
	return (*secretsClientConfigurationPtrType)(v)
}

func (*secretsClientConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsClientConfiguration)(nil)).Elem()
}

func (i *secretsClientConfigurationPtrType) ToSecretsClientConfigurationPtrOutput() SecretsClientConfigurationPtrOutput {
	return i.ToSecretsClientConfigurationPtrOutputWithContext(context.Background())
}

func (i *secretsClientConfigurationPtrType) ToSecretsClientConfigurationPtrOutputWithContext(ctx context.Context) SecretsClientConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsClientConfigurationPtrOutput)
}

func (i *secretsClientConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*SecretsClientConfiguration] {
	return pulumix.Output[*SecretsClientConfiguration]{
		OutputState: i.ToSecretsClientConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type SecretsClientConfigurationOutput struct{ *pulumi.OutputState }

func (SecretsClientConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsClientConfiguration)(nil)).Elem()
}

func (o SecretsClientConfigurationOutput) ToConfigurationMachineSecretsOutput() ConfigurationMachineSecretsOutput {
	return ConfigurationMachineSecretsOutput(o.ToSecretsClientConfigurationOutput())
}

func (o SecretsClientConfigurationOutput) ToSecretsClientConfigurationOutput() SecretsClientConfigurationOutput {
	return o
}

func (o SecretsClientConfigurationOutput) ToSecretsClientConfigurationOutputWithContext(ctx context.Context) SecretsClientConfigurationOutput {
	return o
}

func (o SecretsClientConfigurationOutput) ToSecretsClientConfigurationPtrOutput() SecretsClientConfigurationPtrOutput {
	return o.ToSecretsClientConfigurationPtrOutputWithContext(context.Background())
}

func (o SecretsClientConfigurationOutput) ToSecretsClientConfigurationPtrOutputWithContext(ctx context.Context) SecretsClientConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretsClientConfiguration) *SecretsClientConfiguration {
		return &v
	}).(SecretsClientConfigurationPtrOutput)
}

func (o SecretsClientConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[SecretsClientConfiguration] {
	return pulumix.Output[SecretsClientConfiguration]{
		OutputState: o.OutputState,
	}
}

// The client CA certificate
func (o SecretsClientConfigurationOutput) CaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsClientConfiguration) *string { return v.CaCertificate }).(pulumi.StringPtrOutput)
}

// The client certificate
func (o SecretsClientConfigurationOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsClientConfiguration) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// The client key
func (o SecretsClientConfigurationOutput) ClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsClientConfiguration) *string { return v.ClientKey }).(pulumi.StringPtrOutput)
}

type SecretsClientConfigurationPtrOutput struct{ *pulumi.OutputState }

func (SecretsClientConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsClientConfiguration)(nil)).Elem()
}

func (o SecretsClientConfigurationPtrOutput) ToSecretsClientConfigurationPtrOutput() SecretsClientConfigurationPtrOutput {
	return o
}

func (o SecretsClientConfigurationPtrOutput) ToSecretsClientConfigurationPtrOutputWithContext(ctx context.Context) SecretsClientConfigurationPtrOutput {
	return o
}

func (o SecretsClientConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SecretsClientConfiguration] {
	return pulumix.Output[*SecretsClientConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o SecretsClientConfigurationPtrOutput) Elem() SecretsClientConfigurationOutput {
	return o.ApplyT(func(v *SecretsClientConfiguration) SecretsClientConfiguration {
		if v != nil {
			return *v
		}
		var ret SecretsClientConfiguration
		return ret
	}).(SecretsClientConfigurationOutput)
}

// The client CA certificate
func (o SecretsClientConfigurationPtrOutput) CaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsClientConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.CaCertificate
	}).(pulumi.StringPtrOutput)
}

// The client certificate
func (o SecretsClientConfigurationPtrOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsClientConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertificate
	}).(pulumi.StringPtrOutput)
}

// The client key
func (o SecretsClientConfigurationPtrOutput) ClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsClientConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ClientKey
	}).(pulumi.StringPtrOutput)
}

type SecretsMachineSecrets struct {
	Certs *SecretsMachineSecretsCerts `pulumi:"certs"`
	// The cluster secrets
	Cluster *SecretsMachineSecretsCluster `pulumi:"cluster"`
	// kubernetes cluster secrets
	Secrets *SecretsMachineSecretsSecrets `pulumi:"secrets"`
	// trustd secrets
	Trustdinfo *SecretsMachineSecretsTrustdinfo `pulumi:"trustdinfo"`
}

// SecretsMachineSecretsInput is an input type that accepts SecretsMachineSecretsArgs and SecretsMachineSecretsOutput values.
// You can construct a concrete instance of `SecretsMachineSecretsInput` via:
//
//	SecretsMachineSecretsArgs{...}
type SecretsMachineSecretsInput interface {
	pulumi.Input

	ToSecretsMachineSecretsOutput() SecretsMachineSecretsOutput
	ToSecretsMachineSecretsOutputWithContext(context.Context) SecretsMachineSecretsOutput
}

type SecretsMachineSecretsArgs struct {
	Certs SecretsMachineSecretsCertsPtrInput `pulumi:"certs"`
	// The cluster secrets
	Cluster SecretsMachineSecretsClusterPtrInput `pulumi:"cluster"`
	// kubernetes cluster secrets
	Secrets SecretsMachineSecretsSecretsPtrInput `pulumi:"secrets"`
	// trustd secrets
	Trustdinfo SecretsMachineSecretsTrustdinfoPtrInput `pulumi:"trustdinfo"`
}

func (SecretsMachineSecretsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsMachineSecrets)(nil)).Elem()
}

func (i SecretsMachineSecretsArgs) ToSecretsMachineSecretsOutput() SecretsMachineSecretsOutput {
	return i.ToSecretsMachineSecretsOutputWithContext(context.Background())
}

func (i SecretsMachineSecretsArgs) ToSecretsMachineSecretsOutputWithContext(ctx context.Context) SecretsMachineSecretsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsOutput)
}

func (i SecretsMachineSecretsArgs) ToOutput(ctx context.Context) pulumix.Output[SecretsMachineSecrets] {
	return pulumix.Output[SecretsMachineSecrets]{
		OutputState: i.ToSecretsMachineSecretsOutputWithContext(ctx).OutputState,
	}
}

func (i SecretsMachineSecretsArgs) ToSecretsMachineSecretsPtrOutput() SecretsMachineSecretsPtrOutput {
	return i.ToSecretsMachineSecretsPtrOutputWithContext(context.Background())
}

func (i SecretsMachineSecretsArgs) ToSecretsMachineSecretsPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsOutput).ToSecretsMachineSecretsPtrOutputWithContext(ctx)
}

// SecretsMachineSecretsPtrInput is an input type that accepts SecretsMachineSecretsArgs, SecretsMachineSecretsPtr and SecretsMachineSecretsPtrOutput values.
// You can construct a concrete instance of `SecretsMachineSecretsPtrInput` via:
//
//	        SecretsMachineSecretsArgs{...}
//
//	or:
//
//	        nil
type SecretsMachineSecretsPtrInput interface {
	pulumi.Input

	ToSecretsMachineSecretsPtrOutput() SecretsMachineSecretsPtrOutput
	ToSecretsMachineSecretsPtrOutputWithContext(context.Context) SecretsMachineSecretsPtrOutput
}

type secretsMachineSecretsPtrType SecretsMachineSecretsArgs

func SecretsMachineSecretsPtr(v *SecretsMachineSecretsArgs) SecretsMachineSecretsPtrInput {
	return (*secretsMachineSecretsPtrType)(v)
}

func (*secretsMachineSecretsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsMachineSecrets)(nil)).Elem()
}

func (i *secretsMachineSecretsPtrType) ToSecretsMachineSecretsPtrOutput() SecretsMachineSecretsPtrOutput {
	return i.ToSecretsMachineSecretsPtrOutputWithContext(context.Background())
}

func (i *secretsMachineSecretsPtrType) ToSecretsMachineSecretsPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsPtrOutput)
}

func (i *secretsMachineSecretsPtrType) ToOutput(ctx context.Context) pulumix.Output[*SecretsMachineSecrets] {
	return pulumix.Output[*SecretsMachineSecrets]{
		OutputState: i.ToSecretsMachineSecretsPtrOutputWithContext(ctx).OutputState,
	}
}

type SecretsMachineSecretsOutput struct{ *pulumi.OutputState }

func (SecretsMachineSecretsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsMachineSecrets)(nil)).Elem()
}

func (o SecretsMachineSecretsOutput) ToSecretsMachineSecretsOutput() SecretsMachineSecretsOutput {
	return o
}

func (o SecretsMachineSecretsOutput) ToSecretsMachineSecretsOutputWithContext(ctx context.Context) SecretsMachineSecretsOutput {
	return o
}

func (o SecretsMachineSecretsOutput) ToSecretsMachineSecretsPtrOutput() SecretsMachineSecretsPtrOutput {
	return o.ToSecretsMachineSecretsPtrOutputWithContext(context.Background())
}

func (o SecretsMachineSecretsOutput) ToSecretsMachineSecretsPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretsMachineSecrets) *SecretsMachineSecrets {
		return &v
	}).(SecretsMachineSecretsPtrOutput)
}

func (o SecretsMachineSecretsOutput) ToOutput(ctx context.Context) pulumix.Output[SecretsMachineSecrets] {
	return pulumix.Output[SecretsMachineSecrets]{
		OutputState: o.OutputState,
	}
}

func (o SecretsMachineSecretsOutput) Certs() SecretsMachineSecretsCertsPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecrets) *SecretsMachineSecretsCerts { return v.Certs }).(SecretsMachineSecretsCertsPtrOutput)
}

// The cluster secrets
func (o SecretsMachineSecretsOutput) Cluster() SecretsMachineSecretsClusterPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecrets) *SecretsMachineSecretsCluster { return v.Cluster }).(SecretsMachineSecretsClusterPtrOutput)
}

// kubernetes cluster secrets
func (o SecretsMachineSecretsOutput) Secrets() SecretsMachineSecretsSecretsPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecrets) *SecretsMachineSecretsSecrets { return v.Secrets }).(SecretsMachineSecretsSecretsPtrOutput)
}

// trustd secrets
func (o SecretsMachineSecretsOutput) Trustdinfo() SecretsMachineSecretsTrustdinfoPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecrets) *SecretsMachineSecretsTrustdinfo { return v.Trustdinfo }).(SecretsMachineSecretsTrustdinfoPtrOutput)
}

type SecretsMachineSecretsPtrOutput struct{ *pulumi.OutputState }

func (SecretsMachineSecretsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsMachineSecrets)(nil)).Elem()
}

func (o SecretsMachineSecretsPtrOutput) ToSecretsMachineSecretsPtrOutput() SecretsMachineSecretsPtrOutput {
	return o
}

func (o SecretsMachineSecretsPtrOutput) ToSecretsMachineSecretsPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsPtrOutput {
	return o
}

func (o SecretsMachineSecretsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SecretsMachineSecrets] {
	return pulumix.Output[*SecretsMachineSecrets]{
		OutputState: o.OutputState,
	}
}

func (o SecretsMachineSecretsPtrOutput) Elem() SecretsMachineSecretsOutput {
	return o.ApplyT(func(v *SecretsMachineSecrets) SecretsMachineSecrets {
		if v != nil {
			return *v
		}
		var ret SecretsMachineSecrets
		return ret
	}).(SecretsMachineSecretsOutput)
}

func (o SecretsMachineSecretsPtrOutput) Certs() SecretsMachineSecretsCertsPtrOutput {
	return o.ApplyT(func(v *SecretsMachineSecrets) *SecretsMachineSecretsCerts {
		if v == nil {
			return nil
		}
		return v.Certs
	}).(SecretsMachineSecretsCertsPtrOutput)
}

// The cluster secrets
func (o SecretsMachineSecretsPtrOutput) Cluster() SecretsMachineSecretsClusterPtrOutput {
	return o.ApplyT(func(v *SecretsMachineSecrets) *SecretsMachineSecretsCluster {
		if v == nil {
			return nil
		}
		return v.Cluster
	}).(SecretsMachineSecretsClusterPtrOutput)
}

// kubernetes cluster secrets
func (o SecretsMachineSecretsPtrOutput) Secrets() SecretsMachineSecretsSecretsPtrOutput {
	return o.ApplyT(func(v *SecretsMachineSecrets) *SecretsMachineSecretsSecrets {
		if v == nil {
			return nil
		}
		return v.Secrets
	}).(SecretsMachineSecretsSecretsPtrOutput)
}

// trustd secrets
func (o SecretsMachineSecretsPtrOutput) Trustdinfo() SecretsMachineSecretsTrustdinfoPtrOutput {
	return o.ApplyT(func(v *SecretsMachineSecrets) *SecretsMachineSecretsTrustdinfo {
		if v == nil {
			return nil
		}
		return v.Trustdinfo
	}).(SecretsMachineSecretsTrustdinfoPtrOutput)
}

type SecretsMachineSecretsCerts struct {
	// The certificate and key pair
	Etcd *SecretsMachineSecretsCertsEtcd `pulumi:"etcd"`
	// The certificate and key pair
	K8s *SecretsMachineSecretsCertsK8s `pulumi:"k8s"`
	// The certificate and key pair
	K8sAggregator *SecretsMachineSecretsCertsK8sAggregator `pulumi:"k8sAggregator"`
	// The service account secrets
	K8sServiceaccount *SecretsMachineSecretsCertsK8sServiceaccount `pulumi:"k8sServiceaccount"`
	// The certificate and key pair
	Os *SecretsMachineSecretsCertsOs `pulumi:"os"`
}

// SecretsMachineSecretsCertsInput is an input type that accepts SecretsMachineSecretsCertsArgs and SecretsMachineSecretsCertsOutput values.
// You can construct a concrete instance of `SecretsMachineSecretsCertsInput` via:
//
//	SecretsMachineSecretsCertsArgs{...}
type SecretsMachineSecretsCertsInput interface {
	pulumi.Input

	ToSecretsMachineSecretsCertsOutput() SecretsMachineSecretsCertsOutput
	ToSecretsMachineSecretsCertsOutputWithContext(context.Context) SecretsMachineSecretsCertsOutput
}

type SecretsMachineSecretsCertsArgs struct {
	// The certificate and key pair
	Etcd SecretsMachineSecretsCertsEtcdPtrInput `pulumi:"etcd"`
	// The certificate and key pair
	K8s SecretsMachineSecretsCertsK8sPtrInput `pulumi:"k8s"`
	// The certificate and key pair
	K8sAggregator SecretsMachineSecretsCertsK8sAggregatorPtrInput `pulumi:"k8sAggregator"`
	// The service account secrets
	K8sServiceaccount SecretsMachineSecretsCertsK8sServiceaccountPtrInput `pulumi:"k8sServiceaccount"`
	// The certificate and key pair
	Os SecretsMachineSecretsCertsOsPtrInput `pulumi:"os"`
}

func (SecretsMachineSecretsCertsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsMachineSecretsCerts)(nil)).Elem()
}

func (i SecretsMachineSecretsCertsArgs) ToSecretsMachineSecretsCertsOutput() SecretsMachineSecretsCertsOutput {
	return i.ToSecretsMachineSecretsCertsOutputWithContext(context.Background())
}

func (i SecretsMachineSecretsCertsArgs) ToSecretsMachineSecretsCertsOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsCertsOutput)
}

func (i SecretsMachineSecretsCertsArgs) ToOutput(ctx context.Context) pulumix.Output[SecretsMachineSecretsCerts] {
	return pulumix.Output[SecretsMachineSecretsCerts]{
		OutputState: i.ToSecretsMachineSecretsCertsOutputWithContext(ctx).OutputState,
	}
}

func (i SecretsMachineSecretsCertsArgs) ToSecretsMachineSecretsCertsPtrOutput() SecretsMachineSecretsCertsPtrOutput {
	return i.ToSecretsMachineSecretsCertsPtrOutputWithContext(context.Background())
}

func (i SecretsMachineSecretsCertsArgs) ToSecretsMachineSecretsCertsPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsCertsOutput).ToSecretsMachineSecretsCertsPtrOutputWithContext(ctx)
}

// SecretsMachineSecretsCertsPtrInput is an input type that accepts SecretsMachineSecretsCertsArgs, SecretsMachineSecretsCertsPtr and SecretsMachineSecretsCertsPtrOutput values.
// You can construct a concrete instance of `SecretsMachineSecretsCertsPtrInput` via:
//
//	        SecretsMachineSecretsCertsArgs{...}
//
//	or:
//
//	        nil
type SecretsMachineSecretsCertsPtrInput interface {
	pulumi.Input

	ToSecretsMachineSecretsCertsPtrOutput() SecretsMachineSecretsCertsPtrOutput
	ToSecretsMachineSecretsCertsPtrOutputWithContext(context.Context) SecretsMachineSecretsCertsPtrOutput
}

type secretsMachineSecretsCertsPtrType SecretsMachineSecretsCertsArgs

func SecretsMachineSecretsCertsPtr(v *SecretsMachineSecretsCertsArgs) SecretsMachineSecretsCertsPtrInput {
	return (*secretsMachineSecretsCertsPtrType)(v)
}

func (*secretsMachineSecretsCertsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsMachineSecretsCerts)(nil)).Elem()
}

func (i *secretsMachineSecretsCertsPtrType) ToSecretsMachineSecretsCertsPtrOutput() SecretsMachineSecretsCertsPtrOutput {
	return i.ToSecretsMachineSecretsCertsPtrOutputWithContext(context.Background())
}

func (i *secretsMachineSecretsCertsPtrType) ToSecretsMachineSecretsCertsPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsCertsPtrOutput)
}

func (i *secretsMachineSecretsCertsPtrType) ToOutput(ctx context.Context) pulumix.Output[*SecretsMachineSecretsCerts] {
	return pulumix.Output[*SecretsMachineSecretsCerts]{
		OutputState: i.ToSecretsMachineSecretsCertsPtrOutputWithContext(ctx).OutputState,
	}
}

type SecretsMachineSecretsCertsOutput struct{ *pulumi.OutputState }

func (SecretsMachineSecretsCertsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsMachineSecretsCerts)(nil)).Elem()
}

func (o SecretsMachineSecretsCertsOutput) ToSecretsMachineSecretsCertsOutput() SecretsMachineSecretsCertsOutput {
	return o
}

func (o SecretsMachineSecretsCertsOutput) ToSecretsMachineSecretsCertsOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsOutput {
	return o
}

func (o SecretsMachineSecretsCertsOutput) ToSecretsMachineSecretsCertsPtrOutput() SecretsMachineSecretsCertsPtrOutput {
	return o.ToSecretsMachineSecretsCertsPtrOutputWithContext(context.Background())
}

func (o SecretsMachineSecretsCertsOutput) ToSecretsMachineSecretsCertsPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretsMachineSecretsCerts) *SecretsMachineSecretsCerts {
		return &v
	}).(SecretsMachineSecretsCertsPtrOutput)
}

func (o SecretsMachineSecretsCertsOutput) ToOutput(ctx context.Context) pulumix.Output[SecretsMachineSecretsCerts] {
	return pulumix.Output[SecretsMachineSecretsCerts]{
		OutputState: o.OutputState,
	}
}

// The certificate and key pair
func (o SecretsMachineSecretsCertsOutput) Etcd() SecretsMachineSecretsCertsEtcdPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecretsCerts) *SecretsMachineSecretsCertsEtcd { return v.Etcd }).(SecretsMachineSecretsCertsEtcdPtrOutput)
}

// The certificate and key pair
func (o SecretsMachineSecretsCertsOutput) K8s() SecretsMachineSecretsCertsK8sPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecretsCerts) *SecretsMachineSecretsCertsK8s { return v.K8s }).(SecretsMachineSecretsCertsK8sPtrOutput)
}

// The certificate and key pair
func (o SecretsMachineSecretsCertsOutput) K8sAggregator() SecretsMachineSecretsCertsK8sAggregatorPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecretsCerts) *SecretsMachineSecretsCertsK8sAggregator { return v.K8sAggregator }).(SecretsMachineSecretsCertsK8sAggregatorPtrOutput)
}

// The service account secrets
func (o SecretsMachineSecretsCertsOutput) K8sServiceaccount() SecretsMachineSecretsCertsK8sServiceaccountPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecretsCerts) *SecretsMachineSecretsCertsK8sServiceaccount {
		return v.K8sServiceaccount
	}).(SecretsMachineSecretsCertsK8sServiceaccountPtrOutput)
}

// The certificate and key pair
func (o SecretsMachineSecretsCertsOutput) Os() SecretsMachineSecretsCertsOsPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecretsCerts) *SecretsMachineSecretsCertsOs { return v.Os }).(SecretsMachineSecretsCertsOsPtrOutput)
}

type SecretsMachineSecretsCertsPtrOutput struct{ *pulumi.OutputState }

func (SecretsMachineSecretsCertsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsMachineSecretsCerts)(nil)).Elem()
}

func (o SecretsMachineSecretsCertsPtrOutput) ToSecretsMachineSecretsCertsPtrOutput() SecretsMachineSecretsCertsPtrOutput {
	return o
}

func (o SecretsMachineSecretsCertsPtrOutput) ToSecretsMachineSecretsCertsPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsPtrOutput {
	return o
}

func (o SecretsMachineSecretsCertsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SecretsMachineSecretsCerts] {
	return pulumix.Output[*SecretsMachineSecretsCerts]{
		OutputState: o.OutputState,
	}
}

func (o SecretsMachineSecretsCertsPtrOutput) Elem() SecretsMachineSecretsCertsOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsCerts) SecretsMachineSecretsCerts {
		if v != nil {
			return *v
		}
		var ret SecretsMachineSecretsCerts
		return ret
	}).(SecretsMachineSecretsCertsOutput)
}

// The certificate and key pair
func (o SecretsMachineSecretsCertsPtrOutput) Etcd() SecretsMachineSecretsCertsEtcdPtrOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsCerts) *SecretsMachineSecretsCertsEtcd {
		if v == nil {
			return nil
		}
		return v.Etcd
	}).(SecretsMachineSecretsCertsEtcdPtrOutput)
}

// The certificate and key pair
func (o SecretsMachineSecretsCertsPtrOutput) K8s() SecretsMachineSecretsCertsK8sPtrOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsCerts) *SecretsMachineSecretsCertsK8s {
		if v == nil {
			return nil
		}
		return v.K8s
	}).(SecretsMachineSecretsCertsK8sPtrOutput)
}

// The certificate and key pair
func (o SecretsMachineSecretsCertsPtrOutput) K8sAggregator() SecretsMachineSecretsCertsK8sAggregatorPtrOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsCerts) *SecretsMachineSecretsCertsK8sAggregator {
		if v == nil {
			return nil
		}
		return v.K8sAggregator
	}).(SecretsMachineSecretsCertsK8sAggregatorPtrOutput)
}

// The service account secrets
func (o SecretsMachineSecretsCertsPtrOutput) K8sServiceaccount() SecretsMachineSecretsCertsK8sServiceaccountPtrOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsCerts) *SecretsMachineSecretsCertsK8sServiceaccount {
		if v == nil {
			return nil
		}
		return v.K8sServiceaccount
	}).(SecretsMachineSecretsCertsK8sServiceaccountPtrOutput)
}

// The certificate and key pair
func (o SecretsMachineSecretsCertsPtrOutput) Os() SecretsMachineSecretsCertsOsPtrOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsCerts) *SecretsMachineSecretsCertsOs {
		if v == nil {
			return nil
		}
		return v.Os
	}).(SecretsMachineSecretsCertsOsPtrOutput)
}

type SecretsMachineSecretsCertsEtcd struct {
	// certificate data
	Cert *string `pulumi:"cert"`
	// key data
	Key *string `pulumi:"key"`
}

// SecretsMachineSecretsCertsEtcdInput is an input type that accepts SecretsMachineSecretsCertsEtcdArgs and SecretsMachineSecretsCertsEtcdOutput values.
// You can construct a concrete instance of `SecretsMachineSecretsCertsEtcdInput` via:
//
//	SecretsMachineSecretsCertsEtcdArgs{...}
type SecretsMachineSecretsCertsEtcdInput interface {
	pulumi.Input

	ToSecretsMachineSecretsCertsEtcdOutput() SecretsMachineSecretsCertsEtcdOutput
	ToSecretsMachineSecretsCertsEtcdOutputWithContext(context.Context) SecretsMachineSecretsCertsEtcdOutput
}

type SecretsMachineSecretsCertsEtcdArgs struct {
	// certificate data
	Cert pulumi.StringPtrInput `pulumi:"cert"`
	// key data
	Key pulumi.StringPtrInput `pulumi:"key"`
}

func (SecretsMachineSecretsCertsEtcdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsMachineSecretsCertsEtcd)(nil)).Elem()
}

func (i SecretsMachineSecretsCertsEtcdArgs) ToSecretsMachineSecretsCertsEtcdOutput() SecretsMachineSecretsCertsEtcdOutput {
	return i.ToSecretsMachineSecretsCertsEtcdOutputWithContext(context.Background())
}

func (i SecretsMachineSecretsCertsEtcdArgs) ToSecretsMachineSecretsCertsEtcdOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsEtcdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsCertsEtcdOutput)
}

func (i SecretsMachineSecretsCertsEtcdArgs) ToOutput(ctx context.Context) pulumix.Output[SecretsMachineSecretsCertsEtcd] {
	return pulumix.Output[SecretsMachineSecretsCertsEtcd]{
		OutputState: i.ToSecretsMachineSecretsCertsEtcdOutputWithContext(ctx).OutputState,
	}
}

func (i SecretsMachineSecretsCertsEtcdArgs) ToSecretsMachineSecretsCertsEtcdPtrOutput() SecretsMachineSecretsCertsEtcdPtrOutput {
	return i.ToSecretsMachineSecretsCertsEtcdPtrOutputWithContext(context.Background())
}

func (i SecretsMachineSecretsCertsEtcdArgs) ToSecretsMachineSecretsCertsEtcdPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsEtcdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsCertsEtcdOutput).ToSecretsMachineSecretsCertsEtcdPtrOutputWithContext(ctx)
}

// SecretsMachineSecretsCertsEtcdPtrInput is an input type that accepts SecretsMachineSecretsCertsEtcdArgs, SecretsMachineSecretsCertsEtcdPtr and SecretsMachineSecretsCertsEtcdPtrOutput values.
// You can construct a concrete instance of `SecretsMachineSecretsCertsEtcdPtrInput` via:
//
//	        SecretsMachineSecretsCertsEtcdArgs{...}
//
//	or:
//
//	        nil
type SecretsMachineSecretsCertsEtcdPtrInput interface {
	pulumi.Input

	ToSecretsMachineSecretsCertsEtcdPtrOutput() SecretsMachineSecretsCertsEtcdPtrOutput
	ToSecretsMachineSecretsCertsEtcdPtrOutputWithContext(context.Context) SecretsMachineSecretsCertsEtcdPtrOutput
}

type secretsMachineSecretsCertsEtcdPtrType SecretsMachineSecretsCertsEtcdArgs

func SecretsMachineSecretsCertsEtcdPtr(v *SecretsMachineSecretsCertsEtcdArgs) SecretsMachineSecretsCertsEtcdPtrInput {
	return (*secretsMachineSecretsCertsEtcdPtrType)(v)
}

func (*secretsMachineSecretsCertsEtcdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsMachineSecretsCertsEtcd)(nil)).Elem()
}

func (i *secretsMachineSecretsCertsEtcdPtrType) ToSecretsMachineSecretsCertsEtcdPtrOutput() SecretsMachineSecretsCertsEtcdPtrOutput {
	return i.ToSecretsMachineSecretsCertsEtcdPtrOutputWithContext(context.Background())
}

func (i *secretsMachineSecretsCertsEtcdPtrType) ToSecretsMachineSecretsCertsEtcdPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsEtcdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsCertsEtcdPtrOutput)
}

func (i *secretsMachineSecretsCertsEtcdPtrType) ToOutput(ctx context.Context) pulumix.Output[*SecretsMachineSecretsCertsEtcd] {
	return pulumix.Output[*SecretsMachineSecretsCertsEtcd]{
		OutputState: i.ToSecretsMachineSecretsCertsEtcdPtrOutputWithContext(ctx).OutputState,
	}
}

type SecretsMachineSecretsCertsEtcdOutput struct{ *pulumi.OutputState }

func (SecretsMachineSecretsCertsEtcdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsMachineSecretsCertsEtcd)(nil)).Elem()
}

func (o SecretsMachineSecretsCertsEtcdOutput) ToSecretsMachineSecretsCertsEtcdOutput() SecretsMachineSecretsCertsEtcdOutput {
	return o
}

func (o SecretsMachineSecretsCertsEtcdOutput) ToSecretsMachineSecretsCertsEtcdOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsEtcdOutput {
	return o
}

func (o SecretsMachineSecretsCertsEtcdOutput) ToSecretsMachineSecretsCertsEtcdPtrOutput() SecretsMachineSecretsCertsEtcdPtrOutput {
	return o.ToSecretsMachineSecretsCertsEtcdPtrOutputWithContext(context.Background())
}

func (o SecretsMachineSecretsCertsEtcdOutput) ToSecretsMachineSecretsCertsEtcdPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsEtcdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretsMachineSecretsCertsEtcd) *SecretsMachineSecretsCertsEtcd {
		return &v
	}).(SecretsMachineSecretsCertsEtcdPtrOutput)
}

func (o SecretsMachineSecretsCertsEtcdOutput) ToOutput(ctx context.Context) pulumix.Output[SecretsMachineSecretsCertsEtcd] {
	return pulumix.Output[SecretsMachineSecretsCertsEtcd]{
		OutputState: o.OutputState,
	}
}

// certificate data
func (o SecretsMachineSecretsCertsEtcdOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecretsCertsEtcd) *string { return v.Cert }).(pulumi.StringPtrOutput)
}

// key data
func (o SecretsMachineSecretsCertsEtcdOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecretsCertsEtcd) *string { return v.Key }).(pulumi.StringPtrOutput)
}

type SecretsMachineSecretsCertsEtcdPtrOutput struct{ *pulumi.OutputState }

func (SecretsMachineSecretsCertsEtcdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsMachineSecretsCertsEtcd)(nil)).Elem()
}

func (o SecretsMachineSecretsCertsEtcdPtrOutput) ToSecretsMachineSecretsCertsEtcdPtrOutput() SecretsMachineSecretsCertsEtcdPtrOutput {
	return o
}

func (o SecretsMachineSecretsCertsEtcdPtrOutput) ToSecretsMachineSecretsCertsEtcdPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsEtcdPtrOutput {
	return o
}

func (o SecretsMachineSecretsCertsEtcdPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SecretsMachineSecretsCertsEtcd] {
	return pulumix.Output[*SecretsMachineSecretsCertsEtcd]{
		OutputState: o.OutputState,
	}
}

func (o SecretsMachineSecretsCertsEtcdPtrOutput) Elem() SecretsMachineSecretsCertsEtcdOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsCertsEtcd) SecretsMachineSecretsCertsEtcd {
		if v != nil {
			return *v
		}
		var ret SecretsMachineSecretsCertsEtcd
		return ret
	}).(SecretsMachineSecretsCertsEtcdOutput)
}

// certificate data
func (o SecretsMachineSecretsCertsEtcdPtrOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsCertsEtcd) *string {
		if v == nil {
			return nil
		}
		return v.Cert
	}).(pulumi.StringPtrOutput)
}

// key data
func (o SecretsMachineSecretsCertsEtcdPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsCertsEtcd) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

type SecretsMachineSecretsCertsK8s struct {
	// certificate data
	Cert *string `pulumi:"cert"`
	// key data
	Key *string `pulumi:"key"`
}

// SecretsMachineSecretsCertsK8sInput is an input type that accepts SecretsMachineSecretsCertsK8sArgs and SecretsMachineSecretsCertsK8sOutput values.
// You can construct a concrete instance of `SecretsMachineSecretsCertsK8sInput` via:
//
//	SecretsMachineSecretsCertsK8sArgs{...}
type SecretsMachineSecretsCertsK8sInput interface {
	pulumi.Input

	ToSecretsMachineSecretsCertsK8sOutput() SecretsMachineSecretsCertsK8sOutput
	ToSecretsMachineSecretsCertsK8sOutputWithContext(context.Context) SecretsMachineSecretsCertsK8sOutput
}

type SecretsMachineSecretsCertsK8sArgs struct {
	// certificate data
	Cert pulumi.StringPtrInput `pulumi:"cert"`
	// key data
	Key pulumi.StringPtrInput `pulumi:"key"`
}

func (SecretsMachineSecretsCertsK8sArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsMachineSecretsCertsK8s)(nil)).Elem()
}

func (i SecretsMachineSecretsCertsK8sArgs) ToSecretsMachineSecretsCertsK8sOutput() SecretsMachineSecretsCertsK8sOutput {
	return i.ToSecretsMachineSecretsCertsK8sOutputWithContext(context.Background())
}

func (i SecretsMachineSecretsCertsK8sArgs) ToSecretsMachineSecretsCertsK8sOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsK8sOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsCertsK8sOutput)
}

func (i SecretsMachineSecretsCertsK8sArgs) ToOutput(ctx context.Context) pulumix.Output[SecretsMachineSecretsCertsK8s] {
	return pulumix.Output[SecretsMachineSecretsCertsK8s]{
		OutputState: i.ToSecretsMachineSecretsCertsK8sOutputWithContext(ctx).OutputState,
	}
}

func (i SecretsMachineSecretsCertsK8sArgs) ToSecretsMachineSecretsCertsK8sPtrOutput() SecretsMachineSecretsCertsK8sPtrOutput {
	return i.ToSecretsMachineSecretsCertsK8sPtrOutputWithContext(context.Background())
}

func (i SecretsMachineSecretsCertsK8sArgs) ToSecretsMachineSecretsCertsK8sPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsK8sPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsCertsK8sOutput).ToSecretsMachineSecretsCertsK8sPtrOutputWithContext(ctx)
}

// SecretsMachineSecretsCertsK8sPtrInput is an input type that accepts SecretsMachineSecretsCertsK8sArgs, SecretsMachineSecretsCertsK8sPtr and SecretsMachineSecretsCertsK8sPtrOutput values.
// You can construct a concrete instance of `SecretsMachineSecretsCertsK8sPtrInput` via:
//
//	        SecretsMachineSecretsCertsK8sArgs{...}
//
//	or:
//
//	        nil
type SecretsMachineSecretsCertsK8sPtrInput interface {
	pulumi.Input

	ToSecretsMachineSecretsCertsK8sPtrOutput() SecretsMachineSecretsCertsK8sPtrOutput
	ToSecretsMachineSecretsCertsK8sPtrOutputWithContext(context.Context) SecretsMachineSecretsCertsK8sPtrOutput
}

type secretsMachineSecretsCertsK8sPtrType SecretsMachineSecretsCertsK8sArgs

func SecretsMachineSecretsCertsK8sPtr(v *SecretsMachineSecretsCertsK8sArgs) SecretsMachineSecretsCertsK8sPtrInput {
	return (*secretsMachineSecretsCertsK8sPtrType)(v)
}

func (*secretsMachineSecretsCertsK8sPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsMachineSecretsCertsK8s)(nil)).Elem()
}

func (i *secretsMachineSecretsCertsK8sPtrType) ToSecretsMachineSecretsCertsK8sPtrOutput() SecretsMachineSecretsCertsK8sPtrOutput {
	return i.ToSecretsMachineSecretsCertsK8sPtrOutputWithContext(context.Background())
}

func (i *secretsMachineSecretsCertsK8sPtrType) ToSecretsMachineSecretsCertsK8sPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsK8sPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsCertsK8sPtrOutput)
}

func (i *secretsMachineSecretsCertsK8sPtrType) ToOutput(ctx context.Context) pulumix.Output[*SecretsMachineSecretsCertsK8s] {
	return pulumix.Output[*SecretsMachineSecretsCertsK8s]{
		OutputState: i.ToSecretsMachineSecretsCertsK8sPtrOutputWithContext(ctx).OutputState,
	}
}

type SecretsMachineSecretsCertsK8sOutput struct{ *pulumi.OutputState }

func (SecretsMachineSecretsCertsK8sOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsMachineSecretsCertsK8s)(nil)).Elem()
}

func (o SecretsMachineSecretsCertsK8sOutput) ToSecretsMachineSecretsCertsK8sOutput() SecretsMachineSecretsCertsK8sOutput {
	return o
}

func (o SecretsMachineSecretsCertsK8sOutput) ToSecretsMachineSecretsCertsK8sOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsK8sOutput {
	return o
}

func (o SecretsMachineSecretsCertsK8sOutput) ToSecretsMachineSecretsCertsK8sPtrOutput() SecretsMachineSecretsCertsK8sPtrOutput {
	return o.ToSecretsMachineSecretsCertsK8sPtrOutputWithContext(context.Background())
}

func (o SecretsMachineSecretsCertsK8sOutput) ToSecretsMachineSecretsCertsK8sPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsK8sPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretsMachineSecretsCertsK8s) *SecretsMachineSecretsCertsK8s {
		return &v
	}).(SecretsMachineSecretsCertsK8sPtrOutput)
}

func (o SecretsMachineSecretsCertsK8sOutput) ToOutput(ctx context.Context) pulumix.Output[SecretsMachineSecretsCertsK8s] {
	return pulumix.Output[SecretsMachineSecretsCertsK8s]{
		OutputState: o.OutputState,
	}
}

// certificate data
func (o SecretsMachineSecretsCertsK8sOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecretsCertsK8s) *string { return v.Cert }).(pulumi.StringPtrOutput)
}

// key data
func (o SecretsMachineSecretsCertsK8sOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecretsCertsK8s) *string { return v.Key }).(pulumi.StringPtrOutput)
}

type SecretsMachineSecretsCertsK8sPtrOutput struct{ *pulumi.OutputState }

func (SecretsMachineSecretsCertsK8sPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsMachineSecretsCertsK8s)(nil)).Elem()
}

func (o SecretsMachineSecretsCertsK8sPtrOutput) ToSecretsMachineSecretsCertsK8sPtrOutput() SecretsMachineSecretsCertsK8sPtrOutput {
	return o
}

func (o SecretsMachineSecretsCertsK8sPtrOutput) ToSecretsMachineSecretsCertsK8sPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsK8sPtrOutput {
	return o
}

func (o SecretsMachineSecretsCertsK8sPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SecretsMachineSecretsCertsK8s] {
	return pulumix.Output[*SecretsMachineSecretsCertsK8s]{
		OutputState: o.OutputState,
	}
}

func (o SecretsMachineSecretsCertsK8sPtrOutput) Elem() SecretsMachineSecretsCertsK8sOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsCertsK8s) SecretsMachineSecretsCertsK8s {
		if v != nil {
			return *v
		}
		var ret SecretsMachineSecretsCertsK8s
		return ret
	}).(SecretsMachineSecretsCertsK8sOutput)
}

// certificate data
func (o SecretsMachineSecretsCertsK8sPtrOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsCertsK8s) *string {
		if v == nil {
			return nil
		}
		return v.Cert
	}).(pulumi.StringPtrOutput)
}

// key data
func (o SecretsMachineSecretsCertsK8sPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsCertsK8s) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

type SecretsMachineSecretsCertsK8sAggregator struct {
	// certificate data
	Cert *string `pulumi:"cert"`
	// key data
	Key *string `pulumi:"key"`
}

// SecretsMachineSecretsCertsK8sAggregatorInput is an input type that accepts SecretsMachineSecretsCertsK8sAggregatorArgs and SecretsMachineSecretsCertsK8sAggregatorOutput values.
// You can construct a concrete instance of `SecretsMachineSecretsCertsK8sAggregatorInput` via:
//
//	SecretsMachineSecretsCertsK8sAggregatorArgs{...}
type SecretsMachineSecretsCertsK8sAggregatorInput interface {
	pulumi.Input

	ToSecretsMachineSecretsCertsK8sAggregatorOutput() SecretsMachineSecretsCertsK8sAggregatorOutput
	ToSecretsMachineSecretsCertsK8sAggregatorOutputWithContext(context.Context) SecretsMachineSecretsCertsK8sAggregatorOutput
}

type SecretsMachineSecretsCertsK8sAggregatorArgs struct {
	// certificate data
	Cert pulumi.StringPtrInput `pulumi:"cert"`
	// key data
	Key pulumi.StringPtrInput `pulumi:"key"`
}

func (SecretsMachineSecretsCertsK8sAggregatorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsMachineSecretsCertsK8sAggregator)(nil)).Elem()
}

func (i SecretsMachineSecretsCertsK8sAggregatorArgs) ToSecretsMachineSecretsCertsK8sAggregatorOutput() SecretsMachineSecretsCertsK8sAggregatorOutput {
	return i.ToSecretsMachineSecretsCertsK8sAggregatorOutputWithContext(context.Background())
}

func (i SecretsMachineSecretsCertsK8sAggregatorArgs) ToSecretsMachineSecretsCertsK8sAggregatorOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsK8sAggregatorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsCertsK8sAggregatorOutput)
}

func (i SecretsMachineSecretsCertsK8sAggregatorArgs) ToOutput(ctx context.Context) pulumix.Output[SecretsMachineSecretsCertsK8sAggregator] {
	return pulumix.Output[SecretsMachineSecretsCertsK8sAggregator]{
		OutputState: i.ToSecretsMachineSecretsCertsK8sAggregatorOutputWithContext(ctx).OutputState,
	}
}

func (i SecretsMachineSecretsCertsK8sAggregatorArgs) ToSecretsMachineSecretsCertsK8sAggregatorPtrOutput() SecretsMachineSecretsCertsK8sAggregatorPtrOutput {
	return i.ToSecretsMachineSecretsCertsK8sAggregatorPtrOutputWithContext(context.Background())
}

func (i SecretsMachineSecretsCertsK8sAggregatorArgs) ToSecretsMachineSecretsCertsK8sAggregatorPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsK8sAggregatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsCertsK8sAggregatorOutput).ToSecretsMachineSecretsCertsK8sAggregatorPtrOutputWithContext(ctx)
}

// SecretsMachineSecretsCertsK8sAggregatorPtrInput is an input type that accepts SecretsMachineSecretsCertsK8sAggregatorArgs, SecretsMachineSecretsCertsK8sAggregatorPtr and SecretsMachineSecretsCertsK8sAggregatorPtrOutput values.
// You can construct a concrete instance of `SecretsMachineSecretsCertsK8sAggregatorPtrInput` via:
//
//	        SecretsMachineSecretsCertsK8sAggregatorArgs{...}
//
//	or:
//
//	        nil
type SecretsMachineSecretsCertsK8sAggregatorPtrInput interface {
	pulumi.Input

	ToSecretsMachineSecretsCertsK8sAggregatorPtrOutput() SecretsMachineSecretsCertsK8sAggregatorPtrOutput
	ToSecretsMachineSecretsCertsK8sAggregatorPtrOutputWithContext(context.Context) SecretsMachineSecretsCertsK8sAggregatorPtrOutput
}

type secretsMachineSecretsCertsK8sAggregatorPtrType SecretsMachineSecretsCertsK8sAggregatorArgs

func SecretsMachineSecretsCertsK8sAggregatorPtr(v *SecretsMachineSecretsCertsK8sAggregatorArgs) SecretsMachineSecretsCertsK8sAggregatorPtrInput {
	return (*secretsMachineSecretsCertsK8sAggregatorPtrType)(v)
}

func (*secretsMachineSecretsCertsK8sAggregatorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsMachineSecretsCertsK8sAggregator)(nil)).Elem()
}

func (i *secretsMachineSecretsCertsK8sAggregatorPtrType) ToSecretsMachineSecretsCertsK8sAggregatorPtrOutput() SecretsMachineSecretsCertsK8sAggregatorPtrOutput {
	return i.ToSecretsMachineSecretsCertsK8sAggregatorPtrOutputWithContext(context.Background())
}

func (i *secretsMachineSecretsCertsK8sAggregatorPtrType) ToSecretsMachineSecretsCertsK8sAggregatorPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsK8sAggregatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsCertsK8sAggregatorPtrOutput)
}

func (i *secretsMachineSecretsCertsK8sAggregatorPtrType) ToOutput(ctx context.Context) pulumix.Output[*SecretsMachineSecretsCertsK8sAggregator] {
	return pulumix.Output[*SecretsMachineSecretsCertsK8sAggregator]{
		OutputState: i.ToSecretsMachineSecretsCertsK8sAggregatorPtrOutputWithContext(ctx).OutputState,
	}
}

type SecretsMachineSecretsCertsK8sAggregatorOutput struct{ *pulumi.OutputState }

func (SecretsMachineSecretsCertsK8sAggregatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsMachineSecretsCertsK8sAggregator)(nil)).Elem()
}

func (o SecretsMachineSecretsCertsK8sAggregatorOutput) ToSecretsMachineSecretsCertsK8sAggregatorOutput() SecretsMachineSecretsCertsK8sAggregatorOutput {
	return o
}

func (o SecretsMachineSecretsCertsK8sAggregatorOutput) ToSecretsMachineSecretsCertsK8sAggregatorOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsK8sAggregatorOutput {
	return o
}

func (o SecretsMachineSecretsCertsK8sAggregatorOutput) ToSecretsMachineSecretsCertsK8sAggregatorPtrOutput() SecretsMachineSecretsCertsK8sAggregatorPtrOutput {
	return o.ToSecretsMachineSecretsCertsK8sAggregatorPtrOutputWithContext(context.Background())
}

func (o SecretsMachineSecretsCertsK8sAggregatorOutput) ToSecretsMachineSecretsCertsK8sAggregatorPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsK8sAggregatorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretsMachineSecretsCertsK8sAggregator) *SecretsMachineSecretsCertsK8sAggregator {
		return &v
	}).(SecretsMachineSecretsCertsK8sAggregatorPtrOutput)
}

func (o SecretsMachineSecretsCertsK8sAggregatorOutput) ToOutput(ctx context.Context) pulumix.Output[SecretsMachineSecretsCertsK8sAggregator] {
	return pulumix.Output[SecretsMachineSecretsCertsK8sAggregator]{
		OutputState: o.OutputState,
	}
}

// certificate data
func (o SecretsMachineSecretsCertsK8sAggregatorOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecretsCertsK8sAggregator) *string { return v.Cert }).(pulumi.StringPtrOutput)
}

// key data
func (o SecretsMachineSecretsCertsK8sAggregatorOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecretsCertsK8sAggregator) *string { return v.Key }).(pulumi.StringPtrOutput)
}

type SecretsMachineSecretsCertsK8sAggregatorPtrOutput struct{ *pulumi.OutputState }

func (SecretsMachineSecretsCertsK8sAggregatorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsMachineSecretsCertsK8sAggregator)(nil)).Elem()
}

func (o SecretsMachineSecretsCertsK8sAggregatorPtrOutput) ToSecretsMachineSecretsCertsK8sAggregatorPtrOutput() SecretsMachineSecretsCertsK8sAggregatorPtrOutput {
	return o
}

func (o SecretsMachineSecretsCertsK8sAggregatorPtrOutput) ToSecretsMachineSecretsCertsK8sAggregatorPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsK8sAggregatorPtrOutput {
	return o
}

func (o SecretsMachineSecretsCertsK8sAggregatorPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SecretsMachineSecretsCertsK8sAggregator] {
	return pulumix.Output[*SecretsMachineSecretsCertsK8sAggregator]{
		OutputState: o.OutputState,
	}
}

func (o SecretsMachineSecretsCertsK8sAggregatorPtrOutput) Elem() SecretsMachineSecretsCertsK8sAggregatorOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsCertsK8sAggregator) SecretsMachineSecretsCertsK8sAggregator {
		if v != nil {
			return *v
		}
		var ret SecretsMachineSecretsCertsK8sAggregator
		return ret
	}).(SecretsMachineSecretsCertsK8sAggregatorOutput)
}

// certificate data
func (o SecretsMachineSecretsCertsK8sAggregatorPtrOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsCertsK8sAggregator) *string {
		if v == nil {
			return nil
		}
		return v.Cert
	}).(pulumi.StringPtrOutput)
}

// key data
func (o SecretsMachineSecretsCertsK8sAggregatorPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsCertsK8sAggregator) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

type SecretsMachineSecretsCertsK8sServiceaccount struct {
	// key data
	Key *string `pulumi:"key"`
}

// SecretsMachineSecretsCertsK8sServiceaccountInput is an input type that accepts SecretsMachineSecretsCertsK8sServiceaccountArgs and SecretsMachineSecretsCertsK8sServiceaccountOutput values.
// You can construct a concrete instance of `SecretsMachineSecretsCertsK8sServiceaccountInput` via:
//
//	SecretsMachineSecretsCertsK8sServiceaccountArgs{...}
type SecretsMachineSecretsCertsK8sServiceaccountInput interface {
	pulumi.Input

	ToSecretsMachineSecretsCertsK8sServiceaccountOutput() SecretsMachineSecretsCertsK8sServiceaccountOutput
	ToSecretsMachineSecretsCertsK8sServiceaccountOutputWithContext(context.Context) SecretsMachineSecretsCertsK8sServiceaccountOutput
}

type SecretsMachineSecretsCertsK8sServiceaccountArgs struct {
	// key data
	Key pulumi.StringPtrInput `pulumi:"key"`
}

func (SecretsMachineSecretsCertsK8sServiceaccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsMachineSecretsCertsK8sServiceaccount)(nil)).Elem()
}

func (i SecretsMachineSecretsCertsK8sServiceaccountArgs) ToSecretsMachineSecretsCertsK8sServiceaccountOutput() SecretsMachineSecretsCertsK8sServiceaccountOutput {
	return i.ToSecretsMachineSecretsCertsK8sServiceaccountOutputWithContext(context.Background())
}

func (i SecretsMachineSecretsCertsK8sServiceaccountArgs) ToSecretsMachineSecretsCertsK8sServiceaccountOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsK8sServiceaccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsCertsK8sServiceaccountOutput)
}

func (i SecretsMachineSecretsCertsK8sServiceaccountArgs) ToOutput(ctx context.Context) pulumix.Output[SecretsMachineSecretsCertsK8sServiceaccount] {
	return pulumix.Output[SecretsMachineSecretsCertsK8sServiceaccount]{
		OutputState: i.ToSecretsMachineSecretsCertsK8sServiceaccountOutputWithContext(ctx).OutputState,
	}
}

func (i SecretsMachineSecretsCertsK8sServiceaccountArgs) ToSecretsMachineSecretsCertsK8sServiceaccountPtrOutput() SecretsMachineSecretsCertsK8sServiceaccountPtrOutput {
	return i.ToSecretsMachineSecretsCertsK8sServiceaccountPtrOutputWithContext(context.Background())
}

func (i SecretsMachineSecretsCertsK8sServiceaccountArgs) ToSecretsMachineSecretsCertsK8sServiceaccountPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsK8sServiceaccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsCertsK8sServiceaccountOutput).ToSecretsMachineSecretsCertsK8sServiceaccountPtrOutputWithContext(ctx)
}

// SecretsMachineSecretsCertsK8sServiceaccountPtrInput is an input type that accepts SecretsMachineSecretsCertsK8sServiceaccountArgs, SecretsMachineSecretsCertsK8sServiceaccountPtr and SecretsMachineSecretsCertsK8sServiceaccountPtrOutput values.
// You can construct a concrete instance of `SecretsMachineSecretsCertsK8sServiceaccountPtrInput` via:
//
//	        SecretsMachineSecretsCertsK8sServiceaccountArgs{...}
//
//	or:
//
//	        nil
type SecretsMachineSecretsCertsK8sServiceaccountPtrInput interface {
	pulumi.Input

	ToSecretsMachineSecretsCertsK8sServiceaccountPtrOutput() SecretsMachineSecretsCertsK8sServiceaccountPtrOutput
	ToSecretsMachineSecretsCertsK8sServiceaccountPtrOutputWithContext(context.Context) SecretsMachineSecretsCertsK8sServiceaccountPtrOutput
}

type secretsMachineSecretsCertsK8sServiceaccountPtrType SecretsMachineSecretsCertsK8sServiceaccountArgs

func SecretsMachineSecretsCertsK8sServiceaccountPtr(v *SecretsMachineSecretsCertsK8sServiceaccountArgs) SecretsMachineSecretsCertsK8sServiceaccountPtrInput {
	return (*secretsMachineSecretsCertsK8sServiceaccountPtrType)(v)
}

func (*secretsMachineSecretsCertsK8sServiceaccountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsMachineSecretsCertsK8sServiceaccount)(nil)).Elem()
}

func (i *secretsMachineSecretsCertsK8sServiceaccountPtrType) ToSecretsMachineSecretsCertsK8sServiceaccountPtrOutput() SecretsMachineSecretsCertsK8sServiceaccountPtrOutput {
	return i.ToSecretsMachineSecretsCertsK8sServiceaccountPtrOutputWithContext(context.Background())
}

func (i *secretsMachineSecretsCertsK8sServiceaccountPtrType) ToSecretsMachineSecretsCertsK8sServiceaccountPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsK8sServiceaccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsCertsK8sServiceaccountPtrOutput)
}

func (i *secretsMachineSecretsCertsK8sServiceaccountPtrType) ToOutput(ctx context.Context) pulumix.Output[*SecretsMachineSecretsCertsK8sServiceaccount] {
	return pulumix.Output[*SecretsMachineSecretsCertsK8sServiceaccount]{
		OutputState: i.ToSecretsMachineSecretsCertsK8sServiceaccountPtrOutputWithContext(ctx).OutputState,
	}
}

type SecretsMachineSecretsCertsK8sServiceaccountOutput struct{ *pulumi.OutputState }

func (SecretsMachineSecretsCertsK8sServiceaccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsMachineSecretsCertsK8sServiceaccount)(nil)).Elem()
}

func (o SecretsMachineSecretsCertsK8sServiceaccountOutput) ToSecretsMachineSecretsCertsK8sServiceaccountOutput() SecretsMachineSecretsCertsK8sServiceaccountOutput {
	return o
}

func (o SecretsMachineSecretsCertsK8sServiceaccountOutput) ToSecretsMachineSecretsCertsK8sServiceaccountOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsK8sServiceaccountOutput {
	return o
}

func (o SecretsMachineSecretsCertsK8sServiceaccountOutput) ToSecretsMachineSecretsCertsK8sServiceaccountPtrOutput() SecretsMachineSecretsCertsK8sServiceaccountPtrOutput {
	return o.ToSecretsMachineSecretsCertsK8sServiceaccountPtrOutputWithContext(context.Background())
}

func (o SecretsMachineSecretsCertsK8sServiceaccountOutput) ToSecretsMachineSecretsCertsK8sServiceaccountPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsK8sServiceaccountPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretsMachineSecretsCertsK8sServiceaccount) *SecretsMachineSecretsCertsK8sServiceaccount {
		return &v
	}).(SecretsMachineSecretsCertsK8sServiceaccountPtrOutput)
}

func (o SecretsMachineSecretsCertsK8sServiceaccountOutput) ToOutput(ctx context.Context) pulumix.Output[SecretsMachineSecretsCertsK8sServiceaccount] {
	return pulumix.Output[SecretsMachineSecretsCertsK8sServiceaccount]{
		OutputState: o.OutputState,
	}
}

// key data
func (o SecretsMachineSecretsCertsK8sServiceaccountOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecretsCertsK8sServiceaccount) *string { return v.Key }).(pulumi.StringPtrOutput)
}

type SecretsMachineSecretsCertsK8sServiceaccountPtrOutput struct{ *pulumi.OutputState }

func (SecretsMachineSecretsCertsK8sServiceaccountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsMachineSecretsCertsK8sServiceaccount)(nil)).Elem()
}

func (o SecretsMachineSecretsCertsK8sServiceaccountPtrOutput) ToSecretsMachineSecretsCertsK8sServiceaccountPtrOutput() SecretsMachineSecretsCertsK8sServiceaccountPtrOutput {
	return o
}

func (o SecretsMachineSecretsCertsK8sServiceaccountPtrOutput) ToSecretsMachineSecretsCertsK8sServiceaccountPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsK8sServiceaccountPtrOutput {
	return o
}

func (o SecretsMachineSecretsCertsK8sServiceaccountPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SecretsMachineSecretsCertsK8sServiceaccount] {
	return pulumix.Output[*SecretsMachineSecretsCertsK8sServiceaccount]{
		OutputState: o.OutputState,
	}
}

func (o SecretsMachineSecretsCertsK8sServiceaccountPtrOutput) Elem() SecretsMachineSecretsCertsK8sServiceaccountOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsCertsK8sServiceaccount) SecretsMachineSecretsCertsK8sServiceaccount {
		if v != nil {
			return *v
		}
		var ret SecretsMachineSecretsCertsK8sServiceaccount
		return ret
	}).(SecretsMachineSecretsCertsK8sServiceaccountOutput)
}

// key data
func (o SecretsMachineSecretsCertsK8sServiceaccountPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsCertsK8sServiceaccount) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

type SecretsMachineSecretsCertsOs struct {
	// certificate data
	Cert *string `pulumi:"cert"`
	// key data
	Key *string `pulumi:"key"`
}

// SecretsMachineSecretsCertsOsInput is an input type that accepts SecretsMachineSecretsCertsOsArgs and SecretsMachineSecretsCertsOsOutput values.
// You can construct a concrete instance of `SecretsMachineSecretsCertsOsInput` via:
//
//	SecretsMachineSecretsCertsOsArgs{...}
type SecretsMachineSecretsCertsOsInput interface {
	pulumi.Input

	ToSecretsMachineSecretsCertsOsOutput() SecretsMachineSecretsCertsOsOutput
	ToSecretsMachineSecretsCertsOsOutputWithContext(context.Context) SecretsMachineSecretsCertsOsOutput
}

type SecretsMachineSecretsCertsOsArgs struct {
	// certificate data
	Cert pulumi.StringPtrInput `pulumi:"cert"`
	// key data
	Key pulumi.StringPtrInput `pulumi:"key"`
}

func (SecretsMachineSecretsCertsOsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsMachineSecretsCertsOs)(nil)).Elem()
}

func (i SecretsMachineSecretsCertsOsArgs) ToSecretsMachineSecretsCertsOsOutput() SecretsMachineSecretsCertsOsOutput {
	return i.ToSecretsMachineSecretsCertsOsOutputWithContext(context.Background())
}

func (i SecretsMachineSecretsCertsOsArgs) ToSecretsMachineSecretsCertsOsOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsOsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsCertsOsOutput)
}

func (i SecretsMachineSecretsCertsOsArgs) ToOutput(ctx context.Context) pulumix.Output[SecretsMachineSecretsCertsOs] {
	return pulumix.Output[SecretsMachineSecretsCertsOs]{
		OutputState: i.ToSecretsMachineSecretsCertsOsOutputWithContext(ctx).OutputState,
	}
}

func (i SecretsMachineSecretsCertsOsArgs) ToSecretsMachineSecretsCertsOsPtrOutput() SecretsMachineSecretsCertsOsPtrOutput {
	return i.ToSecretsMachineSecretsCertsOsPtrOutputWithContext(context.Background())
}

func (i SecretsMachineSecretsCertsOsArgs) ToSecretsMachineSecretsCertsOsPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsOsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsCertsOsOutput).ToSecretsMachineSecretsCertsOsPtrOutputWithContext(ctx)
}

// SecretsMachineSecretsCertsOsPtrInput is an input type that accepts SecretsMachineSecretsCertsOsArgs, SecretsMachineSecretsCertsOsPtr and SecretsMachineSecretsCertsOsPtrOutput values.
// You can construct a concrete instance of `SecretsMachineSecretsCertsOsPtrInput` via:
//
//	        SecretsMachineSecretsCertsOsArgs{...}
//
//	or:
//
//	        nil
type SecretsMachineSecretsCertsOsPtrInput interface {
	pulumi.Input

	ToSecretsMachineSecretsCertsOsPtrOutput() SecretsMachineSecretsCertsOsPtrOutput
	ToSecretsMachineSecretsCertsOsPtrOutputWithContext(context.Context) SecretsMachineSecretsCertsOsPtrOutput
}

type secretsMachineSecretsCertsOsPtrType SecretsMachineSecretsCertsOsArgs

func SecretsMachineSecretsCertsOsPtr(v *SecretsMachineSecretsCertsOsArgs) SecretsMachineSecretsCertsOsPtrInput {
	return (*secretsMachineSecretsCertsOsPtrType)(v)
}

func (*secretsMachineSecretsCertsOsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsMachineSecretsCertsOs)(nil)).Elem()
}

func (i *secretsMachineSecretsCertsOsPtrType) ToSecretsMachineSecretsCertsOsPtrOutput() SecretsMachineSecretsCertsOsPtrOutput {
	return i.ToSecretsMachineSecretsCertsOsPtrOutputWithContext(context.Background())
}

func (i *secretsMachineSecretsCertsOsPtrType) ToSecretsMachineSecretsCertsOsPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsOsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsCertsOsPtrOutput)
}

func (i *secretsMachineSecretsCertsOsPtrType) ToOutput(ctx context.Context) pulumix.Output[*SecretsMachineSecretsCertsOs] {
	return pulumix.Output[*SecretsMachineSecretsCertsOs]{
		OutputState: i.ToSecretsMachineSecretsCertsOsPtrOutputWithContext(ctx).OutputState,
	}
}

type SecretsMachineSecretsCertsOsOutput struct{ *pulumi.OutputState }

func (SecretsMachineSecretsCertsOsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsMachineSecretsCertsOs)(nil)).Elem()
}

func (o SecretsMachineSecretsCertsOsOutput) ToSecretsMachineSecretsCertsOsOutput() SecretsMachineSecretsCertsOsOutput {
	return o
}

func (o SecretsMachineSecretsCertsOsOutput) ToSecretsMachineSecretsCertsOsOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsOsOutput {
	return o
}

func (o SecretsMachineSecretsCertsOsOutput) ToSecretsMachineSecretsCertsOsPtrOutput() SecretsMachineSecretsCertsOsPtrOutput {
	return o.ToSecretsMachineSecretsCertsOsPtrOutputWithContext(context.Background())
}

func (o SecretsMachineSecretsCertsOsOutput) ToSecretsMachineSecretsCertsOsPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsOsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretsMachineSecretsCertsOs) *SecretsMachineSecretsCertsOs {
		return &v
	}).(SecretsMachineSecretsCertsOsPtrOutput)
}

func (o SecretsMachineSecretsCertsOsOutput) ToOutput(ctx context.Context) pulumix.Output[SecretsMachineSecretsCertsOs] {
	return pulumix.Output[SecretsMachineSecretsCertsOs]{
		OutputState: o.OutputState,
	}
}

// certificate data
func (o SecretsMachineSecretsCertsOsOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecretsCertsOs) *string { return v.Cert }).(pulumi.StringPtrOutput)
}

// key data
func (o SecretsMachineSecretsCertsOsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecretsCertsOs) *string { return v.Key }).(pulumi.StringPtrOutput)
}

type SecretsMachineSecretsCertsOsPtrOutput struct{ *pulumi.OutputState }

func (SecretsMachineSecretsCertsOsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsMachineSecretsCertsOs)(nil)).Elem()
}

func (o SecretsMachineSecretsCertsOsPtrOutput) ToSecretsMachineSecretsCertsOsPtrOutput() SecretsMachineSecretsCertsOsPtrOutput {
	return o
}

func (o SecretsMachineSecretsCertsOsPtrOutput) ToSecretsMachineSecretsCertsOsPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsCertsOsPtrOutput {
	return o
}

func (o SecretsMachineSecretsCertsOsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SecretsMachineSecretsCertsOs] {
	return pulumix.Output[*SecretsMachineSecretsCertsOs]{
		OutputState: o.OutputState,
	}
}

func (o SecretsMachineSecretsCertsOsPtrOutput) Elem() SecretsMachineSecretsCertsOsOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsCertsOs) SecretsMachineSecretsCertsOs {
		if v != nil {
			return *v
		}
		var ret SecretsMachineSecretsCertsOs
		return ret
	}).(SecretsMachineSecretsCertsOsOutput)
}

// certificate data
func (o SecretsMachineSecretsCertsOsPtrOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsCertsOs) *string {
		if v == nil {
			return nil
		}
		return v.Cert
	}).(pulumi.StringPtrOutput)
}

// key data
func (o SecretsMachineSecretsCertsOsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsCertsOs) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

type SecretsMachineSecretsCluster struct {
	// The cluster ID
	Id *string `pulumi:"id"`
	// The cluster secret
	Secret *string `pulumi:"secret"`
}

// SecretsMachineSecretsClusterInput is an input type that accepts SecretsMachineSecretsClusterArgs and SecretsMachineSecretsClusterOutput values.
// You can construct a concrete instance of `SecretsMachineSecretsClusterInput` via:
//
//	SecretsMachineSecretsClusterArgs{...}
type SecretsMachineSecretsClusterInput interface {
	pulumi.Input

	ToSecretsMachineSecretsClusterOutput() SecretsMachineSecretsClusterOutput
	ToSecretsMachineSecretsClusterOutputWithContext(context.Context) SecretsMachineSecretsClusterOutput
}

type SecretsMachineSecretsClusterArgs struct {
	// The cluster ID
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The cluster secret
	Secret pulumi.StringPtrInput `pulumi:"secret"`
}

func (SecretsMachineSecretsClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsMachineSecretsCluster)(nil)).Elem()
}

func (i SecretsMachineSecretsClusterArgs) ToSecretsMachineSecretsClusterOutput() SecretsMachineSecretsClusterOutput {
	return i.ToSecretsMachineSecretsClusterOutputWithContext(context.Background())
}

func (i SecretsMachineSecretsClusterArgs) ToSecretsMachineSecretsClusterOutputWithContext(ctx context.Context) SecretsMachineSecretsClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsClusterOutput)
}

func (i SecretsMachineSecretsClusterArgs) ToOutput(ctx context.Context) pulumix.Output[SecretsMachineSecretsCluster] {
	return pulumix.Output[SecretsMachineSecretsCluster]{
		OutputState: i.ToSecretsMachineSecretsClusterOutputWithContext(ctx).OutputState,
	}
}

func (i SecretsMachineSecretsClusterArgs) ToSecretsMachineSecretsClusterPtrOutput() SecretsMachineSecretsClusterPtrOutput {
	return i.ToSecretsMachineSecretsClusterPtrOutputWithContext(context.Background())
}

func (i SecretsMachineSecretsClusterArgs) ToSecretsMachineSecretsClusterPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsClusterOutput).ToSecretsMachineSecretsClusterPtrOutputWithContext(ctx)
}

// SecretsMachineSecretsClusterPtrInput is an input type that accepts SecretsMachineSecretsClusterArgs, SecretsMachineSecretsClusterPtr and SecretsMachineSecretsClusterPtrOutput values.
// You can construct a concrete instance of `SecretsMachineSecretsClusterPtrInput` via:
//
//	        SecretsMachineSecretsClusterArgs{...}
//
//	or:
//
//	        nil
type SecretsMachineSecretsClusterPtrInput interface {
	pulumi.Input

	ToSecretsMachineSecretsClusterPtrOutput() SecretsMachineSecretsClusterPtrOutput
	ToSecretsMachineSecretsClusterPtrOutputWithContext(context.Context) SecretsMachineSecretsClusterPtrOutput
}

type secretsMachineSecretsClusterPtrType SecretsMachineSecretsClusterArgs

func SecretsMachineSecretsClusterPtr(v *SecretsMachineSecretsClusterArgs) SecretsMachineSecretsClusterPtrInput {
	return (*secretsMachineSecretsClusterPtrType)(v)
}

func (*secretsMachineSecretsClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsMachineSecretsCluster)(nil)).Elem()
}

func (i *secretsMachineSecretsClusterPtrType) ToSecretsMachineSecretsClusterPtrOutput() SecretsMachineSecretsClusterPtrOutput {
	return i.ToSecretsMachineSecretsClusterPtrOutputWithContext(context.Background())
}

func (i *secretsMachineSecretsClusterPtrType) ToSecretsMachineSecretsClusterPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsClusterPtrOutput)
}

func (i *secretsMachineSecretsClusterPtrType) ToOutput(ctx context.Context) pulumix.Output[*SecretsMachineSecretsCluster] {
	return pulumix.Output[*SecretsMachineSecretsCluster]{
		OutputState: i.ToSecretsMachineSecretsClusterPtrOutputWithContext(ctx).OutputState,
	}
}

type SecretsMachineSecretsClusterOutput struct{ *pulumi.OutputState }

func (SecretsMachineSecretsClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsMachineSecretsCluster)(nil)).Elem()
}

func (o SecretsMachineSecretsClusterOutput) ToSecretsMachineSecretsClusterOutput() SecretsMachineSecretsClusterOutput {
	return o
}

func (o SecretsMachineSecretsClusterOutput) ToSecretsMachineSecretsClusterOutputWithContext(ctx context.Context) SecretsMachineSecretsClusterOutput {
	return o
}

func (o SecretsMachineSecretsClusterOutput) ToSecretsMachineSecretsClusterPtrOutput() SecretsMachineSecretsClusterPtrOutput {
	return o.ToSecretsMachineSecretsClusterPtrOutputWithContext(context.Background())
}

func (o SecretsMachineSecretsClusterOutput) ToSecretsMachineSecretsClusterPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretsMachineSecretsCluster) *SecretsMachineSecretsCluster {
		return &v
	}).(SecretsMachineSecretsClusterPtrOutput)
}

func (o SecretsMachineSecretsClusterOutput) ToOutput(ctx context.Context) pulumix.Output[SecretsMachineSecretsCluster] {
	return pulumix.Output[SecretsMachineSecretsCluster]{
		OutputState: o.OutputState,
	}
}

// The cluster ID
func (o SecretsMachineSecretsClusterOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecretsCluster) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The cluster secret
func (o SecretsMachineSecretsClusterOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecretsCluster) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

type SecretsMachineSecretsClusterPtrOutput struct{ *pulumi.OutputState }

func (SecretsMachineSecretsClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsMachineSecretsCluster)(nil)).Elem()
}

func (o SecretsMachineSecretsClusterPtrOutput) ToSecretsMachineSecretsClusterPtrOutput() SecretsMachineSecretsClusterPtrOutput {
	return o
}

func (o SecretsMachineSecretsClusterPtrOutput) ToSecretsMachineSecretsClusterPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsClusterPtrOutput {
	return o
}

func (o SecretsMachineSecretsClusterPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SecretsMachineSecretsCluster] {
	return pulumix.Output[*SecretsMachineSecretsCluster]{
		OutputState: o.OutputState,
	}
}

func (o SecretsMachineSecretsClusterPtrOutput) Elem() SecretsMachineSecretsClusterOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsCluster) SecretsMachineSecretsCluster {
		if v != nil {
			return *v
		}
		var ret SecretsMachineSecretsCluster
		return ret
	}).(SecretsMachineSecretsClusterOutput)
}

// The cluster ID
func (o SecretsMachineSecretsClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsCluster) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The cluster secret
func (o SecretsMachineSecretsClusterPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsCluster) *string {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(pulumi.StringPtrOutput)
}

type SecretsMachineSecretsSecrets struct {
	// The AES-CBC encryption secret
	AescbcEncryptionSecret *string `pulumi:"aescbcEncryptionSecret"`
	// The bootstrap token
	BootstrapToken *string `pulumi:"bootstrapToken"`
	// The secretbox encryption secret
	SecretboxEncryptionSecret *string `pulumi:"secretboxEncryptionSecret"`
}

// SecretsMachineSecretsSecretsInput is an input type that accepts SecretsMachineSecretsSecretsArgs and SecretsMachineSecretsSecretsOutput values.
// You can construct a concrete instance of `SecretsMachineSecretsSecretsInput` via:
//
//	SecretsMachineSecretsSecretsArgs{...}
type SecretsMachineSecretsSecretsInput interface {
	pulumi.Input

	ToSecretsMachineSecretsSecretsOutput() SecretsMachineSecretsSecretsOutput
	ToSecretsMachineSecretsSecretsOutputWithContext(context.Context) SecretsMachineSecretsSecretsOutput
}

type SecretsMachineSecretsSecretsArgs struct {
	// The AES-CBC encryption secret
	AescbcEncryptionSecret pulumi.StringPtrInput `pulumi:"aescbcEncryptionSecret"`
	// The bootstrap token
	BootstrapToken pulumi.StringPtrInput `pulumi:"bootstrapToken"`
	// The secretbox encryption secret
	SecretboxEncryptionSecret pulumi.StringPtrInput `pulumi:"secretboxEncryptionSecret"`
}

func (SecretsMachineSecretsSecretsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsMachineSecretsSecrets)(nil)).Elem()
}

func (i SecretsMachineSecretsSecretsArgs) ToSecretsMachineSecretsSecretsOutput() SecretsMachineSecretsSecretsOutput {
	return i.ToSecretsMachineSecretsSecretsOutputWithContext(context.Background())
}

func (i SecretsMachineSecretsSecretsArgs) ToSecretsMachineSecretsSecretsOutputWithContext(ctx context.Context) SecretsMachineSecretsSecretsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsSecretsOutput)
}

func (i SecretsMachineSecretsSecretsArgs) ToOutput(ctx context.Context) pulumix.Output[SecretsMachineSecretsSecrets] {
	return pulumix.Output[SecretsMachineSecretsSecrets]{
		OutputState: i.ToSecretsMachineSecretsSecretsOutputWithContext(ctx).OutputState,
	}
}

func (i SecretsMachineSecretsSecretsArgs) ToSecretsMachineSecretsSecretsPtrOutput() SecretsMachineSecretsSecretsPtrOutput {
	return i.ToSecretsMachineSecretsSecretsPtrOutputWithContext(context.Background())
}

func (i SecretsMachineSecretsSecretsArgs) ToSecretsMachineSecretsSecretsPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsSecretsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsSecretsOutput).ToSecretsMachineSecretsSecretsPtrOutputWithContext(ctx)
}

// SecretsMachineSecretsSecretsPtrInput is an input type that accepts SecretsMachineSecretsSecretsArgs, SecretsMachineSecretsSecretsPtr and SecretsMachineSecretsSecretsPtrOutput values.
// You can construct a concrete instance of `SecretsMachineSecretsSecretsPtrInput` via:
//
//	        SecretsMachineSecretsSecretsArgs{...}
//
//	or:
//
//	        nil
type SecretsMachineSecretsSecretsPtrInput interface {
	pulumi.Input

	ToSecretsMachineSecretsSecretsPtrOutput() SecretsMachineSecretsSecretsPtrOutput
	ToSecretsMachineSecretsSecretsPtrOutputWithContext(context.Context) SecretsMachineSecretsSecretsPtrOutput
}

type secretsMachineSecretsSecretsPtrType SecretsMachineSecretsSecretsArgs

func SecretsMachineSecretsSecretsPtr(v *SecretsMachineSecretsSecretsArgs) SecretsMachineSecretsSecretsPtrInput {
	return (*secretsMachineSecretsSecretsPtrType)(v)
}

func (*secretsMachineSecretsSecretsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsMachineSecretsSecrets)(nil)).Elem()
}

func (i *secretsMachineSecretsSecretsPtrType) ToSecretsMachineSecretsSecretsPtrOutput() SecretsMachineSecretsSecretsPtrOutput {
	return i.ToSecretsMachineSecretsSecretsPtrOutputWithContext(context.Background())
}

func (i *secretsMachineSecretsSecretsPtrType) ToSecretsMachineSecretsSecretsPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsSecretsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsSecretsPtrOutput)
}

func (i *secretsMachineSecretsSecretsPtrType) ToOutput(ctx context.Context) pulumix.Output[*SecretsMachineSecretsSecrets] {
	return pulumix.Output[*SecretsMachineSecretsSecrets]{
		OutputState: i.ToSecretsMachineSecretsSecretsPtrOutputWithContext(ctx).OutputState,
	}
}

type SecretsMachineSecretsSecretsOutput struct{ *pulumi.OutputState }

func (SecretsMachineSecretsSecretsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsMachineSecretsSecrets)(nil)).Elem()
}

func (o SecretsMachineSecretsSecretsOutput) ToSecretsMachineSecretsSecretsOutput() SecretsMachineSecretsSecretsOutput {
	return o
}

func (o SecretsMachineSecretsSecretsOutput) ToSecretsMachineSecretsSecretsOutputWithContext(ctx context.Context) SecretsMachineSecretsSecretsOutput {
	return o
}

func (o SecretsMachineSecretsSecretsOutput) ToSecretsMachineSecretsSecretsPtrOutput() SecretsMachineSecretsSecretsPtrOutput {
	return o.ToSecretsMachineSecretsSecretsPtrOutputWithContext(context.Background())
}

func (o SecretsMachineSecretsSecretsOutput) ToSecretsMachineSecretsSecretsPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsSecretsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretsMachineSecretsSecrets) *SecretsMachineSecretsSecrets {
		return &v
	}).(SecretsMachineSecretsSecretsPtrOutput)
}

func (o SecretsMachineSecretsSecretsOutput) ToOutput(ctx context.Context) pulumix.Output[SecretsMachineSecretsSecrets] {
	return pulumix.Output[SecretsMachineSecretsSecrets]{
		OutputState: o.OutputState,
	}
}

// The AES-CBC encryption secret
func (o SecretsMachineSecretsSecretsOutput) AescbcEncryptionSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecretsSecrets) *string { return v.AescbcEncryptionSecret }).(pulumi.StringPtrOutput)
}

// The bootstrap token
func (o SecretsMachineSecretsSecretsOutput) BootstrapToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecretsSecrets) *string { return v.BootstrapToken }).(pulumi.StringPtrOutput)
}

// The secretbox encryption secret
func (o SecretsMachineSecretsSecretsOutput) SecretboxEncryptionSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecretsSecrets) *string { return v.SecretboxEncryptionSecret }).(pulumi.StringPtrOutput)
}

type SecretsMachineSecretsSecretsPtrOutput struct{ *pulumi.OutputState }

func (SecretsMachineSecretsSecretsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsMachineSecretsSecrets)(nil)).Elem()
}

func (o SecretsMachineSecretsSecretsPtrOutput) ToSecretsMachineSecretsSecretsPtrOutput() SecretsMachineSecretsSecretsPtrOutput {
	return o
}

func (o SecretsMachineSecretsSecretsPtrOutput) ToSecretsMachineSecretsSecretsPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsSecretsPtrOutput {
	return o
}

func (o SecretsMachineSecretsSecretsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SecretsMachineSecretsSecrets] {
	return pulumix.Output[*SecretsMachineSecretsSecrets]{
		OutputState: o.OutputState,
	}
}

func (o SecretsMachineSecretsSecretsPtrOutput) Elem() SecretsMachineSecretsSecretsOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsSecrets) SecretsMachineSecretsSecrets {
		if v != nil {
			return *v
		}
		var ret SecretsMachineSecretsSecrets
		return ret
	}).(SecretsMachineSecretsSecretsOutput)
}

// The AES-CBC encryption secret
func (o SecretsMachineSecretsSecretsPtrOutput) AescbcEncryptionSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsSecrets) *string {
		if v == nil {
			return nil
		}
		return v.AescbcEncryptionSecret
	}).(pulumi.StringPtrOutput)
}

// The bootstrap token
func (o SecretsMachineSecretsSecretsPtrOutput) BootstrapToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsSecrets) *string {
		if v == nil {
			return nil
		}
		return v.BootstrapToken
	}).(pulumi.StringPtrOutput)
}

// The secretbox encryption secret
func (o SecretsMachineSecretsSecretsPtrOutput) SecretboxEncryptionSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsSecrets) *string {
		if v == nil {
			return nil
		}
		return v.SecretboxEncryptionSecret
	}).(pulumi.StringPtrOutput)
}

type SecretsMachineSecretsTrustdinfo struct {
	// The trustd token
	Token *string `pulumi:"token"`
}

// SecretsMachineSecretsTrustdinfoInput is an input type that accepts SecretsMachineSecretsTrustdinfoArgs and SecretsMachineSecretsTrustdinfoOutput values.
// You can construct a concrete instance of `SecretsMachineSecretsTrustdinfoInput` via:
//
//	SecretsMachineSecretsTrustdinfoArgs{...}
type SecretsMachineSecretsTrustdinfoInput interface {
	pulumi.Input

	ToSecretsMachineSecretsTrustdinfoOutput() SecretsMachineSecretsTrustdinfoOutput
	ToSecretsMachineSecretsTrustdinfoOutputWithContext(context.Context) SecretsMachineSecretsTrustdinfoOutput
}

type SecretsMachineSecretsTrustdinfoArgs struct {
	// The trustd token
	Token pulumi.StringPtrInput `pulumi:"token"`
}

func (SecretsMachineSecretsTrustdinfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsMachineSecretsTrustdinfo)(nil)).Elem()
}

func (i SecretsMachineSecretsTrustdinfoArgs) ToSecretsMachineSecretsTrustdinfoOutput() SecretsMachineSecretsTrustdinfoOutput {
	return i.ToSecretsMachineSecretsTrustdinfoOutputWithContext(context.Background())
}

func (i SecretsMachineSecretsTrustdinfoArgs) ToSecretsMachineSecretsTrustdinfoOutputWithContext(ctx context.Context) SecretsMachineSecretsTrustdinfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsTrustdinfoOutput)
}

func (i SecretsMachineSecretsTrustdinfoArgs) ToOutput(ctx context.Context) pulumix.Output[SecretsMachineSecretsTrustdinfo] {
	return pulumix.Output[SecretsMachineSecretsTrustdinfo]{
		OutputState: i.ToSecretsMachineSecretsTrustdinfoOutputWithContext(ctx).OutputState,
	}
}

func (i SecretsMachineSecretsTrustdinfoArgs) ToSecretsMachineSecretsTrustdinfoPtrOutput() SecretsMachineSecretsTrustdinfoPtrOutput {
	return i.ToSecretsMachineSecretsTrustdinfoPtrOutputWithContext(context.Background())
}

func (i SecretsMachineSecretsTrustdinfoArgs) ToSecretsMachineSecretsTrustdinfoPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsTrustdinfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsTrustdinfoOutput).ToSecretsMachineSecretsTrustdinfoPtrOutputWithContext(ctx)
}

// SecretsMachineSecretsTrustdinfoPtrInput is an input type that accepts SecretsMachineSecretsTrustdinfoArgs, SecretsMachineSecretsTrustdinfoPtr and SecretsMachineSecretsTrustdinfoPtrOutput values.
// You can construct a concrete instance of `SecretsMachineSecretsTrustdinfoPtrInput` via:
//
//	        SecretsMachineSecretsTrustdinfoArgs{...}
//
//	or:
//
//	        nil
type SecretsMachineSecretsTrustdinfoPtrInput interface {
	pulumi.Input

	ToSecretsMachineSecretsTrustdinfoPtrOutput() SecretsMachineSecretsTrustdinfoPtrOutput
	ToSecretsMachineSecretsTrustdinfoPtrOutputWithContext(context.Context) SecretsMachineSecretsTrustdinfoPtrOutput
}

type secretsMachineSecretsTrustdinfoPtrType SecretsMachineSecretsTrustdinfoArgs

func SecretsMachineSecretsTrustdinfoPtr(v *SecretsMachineSecretsTrustdinfoArgs) SecretsMachineSecretsTrustdinfoPtrInput {
	return (*secretsMachineSecretsTrustdinfoPtrType)(v)
}

func (*secretsMachineSecretsTrustdinfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsMachineSecretsTrustdinfo)(nil)).Elem()
}

func (i *secretsMachineSecretsTrustdinfoPtrType) ToSecretsMachineSecretsTrustdinfoPtrOutput() SecretsMachineSecretsTrustdinfoPtrOutput {
	return i.ToSecretsMachineSecretsTrustdinfoPtrOutputWithContext(context.Background())
}

func (i *secretsMachineSecretsTrustdinfoPtrType) ToSecretsMachineSecretsTrustdinfoPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsTrustdinfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsMachineSecretsTrustdinfoPtrOutput)
}

func (i *secretsMachineSecretsTrustdinfoPtrType) ToOutput(ctx context.Context) pulumix.Output[*SecretsMachineSecretsTrustdinfo] {
	return pulumix.Output[*SecretsMachineSecretsTrustdinfo]{
		OutputState: i.ToSecretsMachineSecretsTrustdinfoPtrOutputWithContext(ctx).OutputState,
	}
}

type SecretsMachineSecretsTrustdinfoOutput struct{ *pulumi.OutputState }

func (SecretsMachineSecretsTrustdinfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsMachineSecretsTrustdinfo)(nil)).Elem()
}

func (o SecretsMachineSecretsTrustdinfoOutput) ToSecretsMachineSecretsTrustdinfoOutput() SecretsMachineSecretsTrustdinfoOutput {
	return o
}

func (o SecretsMachineSecretsTrustdinfoOutput) ToSecretsMachineSecretsTrustdinfoOutputWithContext(ctx context.Context) SecretsMachineSecretsTrustdinfoOutput {
	return o
}

func (o SecretsMachineSecretsTrustdinfoOutput) ToSecretsMachineSecretsTrustdinfoPtrOutput() SecretsMachineSecretsTrustdinfoPtrOutput {
	return o.ToSecretsMachineSecretsTrustdinfoPtrOutputWithContext(context.Background())
}

func (o SecretsMachineSecretsTrustdinfoOutput) ToSecretsMachineSecretsTrustdinfoPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsTrustdinfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretsMachineSecretsTrustdinfo) *SecretsMachineSecretsTrustdinfo {
		return &v
	}).(SecretsMachineSecretsTrustdinfoPtrOutput)
}

func (o SecretsMachineSecretsTrustdinfoOutput) ToOutput(ctx context.Context) pulumix.Output[SecretsMachineSecretsTrustdinfo] {
	return pulumix.Output[SecretsMachineSecretsTrustdinfo]{
		OutputState: o.OutputState,
	}
}

// The trustd token
func (o SecretsMachineSecretsTrustdinfoOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsMachineSecretsTrustdinfo) *string { return v.Token }).(pulumi.StringPtrOutput)
}

type SecretsMachineSecretsTrustdinfoPtrOutput struct{ *pulumi.OutputState }

func (SecretsMachineSecretsTrustdinfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsMachineSecretsTrustdinfo)(nil)).Elem()
}

func (o SecretsMachineSecretsTrustdinfoPtrOutput) ToSecretsMachineSecretsTrustdinfoPtrOutput() SecretsMachineSecretsTrustdinfoPtrOutput {
	return o
}

func (o SecretsMachineSecretsTrustdinfoPtrOutput) ToSecretsMachineSecretsTrustdinfoPtrOutputWithContext(ctx context.Context) SecretsMachineSecretsTrustdinfoPtrOutput {
	return o
}

func (o SecretsMachineSecretsTrustdinfoPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SecretsMachineSecretsTrustdinfo] {
	return pulumix.Output[*SecretsMachineSecretsTrustdinfo]{
		OutputState: o.OutputState,
	}
}

func (o SecretsMachineSecretsTrustdinfoPtrOutput) Elem() SecretsMachineSecretsTrustdinfoOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsTrustdinfo) SecretsMachineSecretsTrustdinfo {
		if v != nil {
			return *v
		}
		var ret SecretsMachineSecretsTrustdinfo
		return ret
	}).(SecretsMachineSecretsTrustdinfoOutput)
}

// The trustd token
func (o SecretsMachineSecretsTrustdinfoPtrOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsMachineSecretsTrustdinfo) *string {
		if v == nil {
			return nil
		}
		return v.Token
	}).(pulumi.StringPtrOutput)
}

type Timeout struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// TimeoutInput is an input type that accepts TimeoutArgs and TimeoutOutput values.
// You can construct a concrete instance of `TimeoutInput` via:
//
//	TimeoutArgs{...}
type TimeoutInput interface {
	pulumi.Input

	ToTimeoutOutput() TimeoutOutput
	ToTimeoutOutputWithContext(context.Context) TimeoutOutput
}

type TimeoutArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (TimeoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Timeout)(nil)).Elem()
}

func (i TimeoutArgs) ToTimeoutOutput() TimeoutOutput {
	return i.ToTimeoutOutputWithContext(context.Background())
}

func (i TimeoutArgs) ToTimeoutOutputWithContext(ctx context.Context) TimeoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeoutOutput)
}

func (i TimeoutArgs) ToOutput(ctx context.Context) pulumix.Output[Timeout] {
	return pulumix.Output[Timeout]{
		OutputState: i.ToTimeoutOutputWithContext(ctx).OutputState,
	}
}

func (i TimeoutArgs) ToTimeoutPtrOutput() TimeoutPtrOutput {
	return i.ToTimeoutPtrOutputWithContext(context.Background())
}

func (i TimeoutArgs) ToTimeoutPtrOutputWithContext(ctx context.Context) TimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeoutOutput).ToTimeoutPtrOutputWithContext(ctx)
}

// TimeoutPtrInput is an input type that accepts TimeoutArgs, TimeoutPtr and TimeoutPtrOutput values.
// You can construct a concrete instance of `TimeoutPtrInput` via:
//
//	        TimeoutArgs{...}
//
//	or:
//
//	        nil
type TimeoutPtrInput interface {
	pulumi.Input

	ToTimeoutPtrOutput() TimeoutPtrOutput
	ToTimeoutPtrOutputWithContext(context.Context) TimeoutPtrOutput
}

type timeoutPtrType TimeoutArgs

func TimeoutPtr(v *TimeoutArgs) TimeoutPtrInput {
	return (*timeoutPtrType)(v)
}

func (*timeoutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Timeout)(nil)).Elem()
}

func (i *timeoutPtrType) ToTimeoutPtrOutput() TimeoutPtrOutput {
	return i.ToTimeoutPtrOutputWithContext(context.Background())
}

func (i *timeoutPtrType) ToTimeoutPtrOutputWithContext(ctx context.Context) TimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeoutPtrOutput)
}

func (i *timeoutPtrType) ToOutput(ctx context.Context) pulumix.Output[*Timeout] {
	return pulumix.Output[*Timeout]{
		OutputState: i.ToTimeoutPtrOutputWithContext(ctx).OutputState,
	}
}

type TimeoutOutput struct{ *pulumi.OutputState }

func (TimeoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Timeout)(nil)).Elem()
}

func (o TimeoutOutput) ToTimeoutOutput() TimeoutOutput {
	return o
}

func (o TimeoutOutput) ToTimeoutOutputWithContext(ctx context.Context) TimeoutOutput {
	return o
}

func (o TimeoutOutput) ToTimeoutPtrOutput() TimeoutPtrOutput {
	return o.ToTimeoutPtrOutputWithContext(context.Background())
}

func (o TimeoutOutput) ToTimeoutPtrOutputWithContext(ctx context.Context) TimeoutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Timeout) *Timeout {
		return &v
	}).(TimeoutPtrOutput)
}

func (o TimeoutOutput) ToOutput(ctx context.Context) pulumix.Output[Timeout] {
	return pulumix.Output[Timeout]{
		OutputState: o.OutputState,
	}
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o TimeoutOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Timeout) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o TimeoutOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Timeout) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type TimeoutPtrOutput struct{ *pulumi.OutputState }

func (TimeoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Timeout)(nil)).Elem()
}

func (o TimeoutPtrOutput) ToTimeoutPtrOutput() TimeoutPtrOutput {
	return o
}

func (o TimeoutPtrOutput) ToTimeoutPtrOutputWithContext(ctx context.Context) TimeoutPtrOutput {
	return o
}

func (o TimeoutPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*Timeout] {
	return pulumix.Output[*Timeout]{
		OutputState: o.OutputState,
	}
}

func (o TimeoutPtrOutput) Elem() TimeoutOutput {
	return o.ApplyT(func(v *Timeout) Timeout {
		if v != nil {
			return *v
		}
		var ret Timeout
		return ret
	}).(TimeoutOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o TimeoutPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Timeout) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o TimeoutPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Timeout) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BootstrapClientConfigurationInput)(nil)).Elem(), BootstrapClientConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BootstrapClientConfigurationPtrInput)(nil)).Elem(), BootstrapClientConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BootstrapTimeoutsInput)(nil)).Elem(), BootstrapTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BootstrapTimeoutsPtrInput)(nil)).Elem(), BootstrapTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationApplyClientConfigurationInput)(nil)).Elem(), ConfigurationApplyClientConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationApplyClientConfigurationPtrInput)(nil)).Elem(), ConfigurationApplyClientConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationMachineSecretsInput)(nil)).Elem(), ConfigurationMachineSecretsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationMachineSecretsCertsInput)(nil)).Elem(), ConfigurationMachineSecretsCertsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationMachineSecretsCertsEtcdInput)(nil)).Elem(), ConfigurationMachineSecretsCertsEtcdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationMachineSecretsCertsK8sInput)(nil)).Elem(), ConfigurationMachineSecretsCertsK8sArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationMachineSecretsCertsK8sAggregatorInput)(nil)).Elem(), ConfigurationMachineSecretsCertsK8sAggregatorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationMachineSecretsCertsK8sServiceaccountInput)(nil)).Elem(), ConfigurationMachineSecretsCertsK8sServiceaccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationMachineSecretsCertsOsInput)(nil)).Elem(), ConfigurationMachineSecretsCertsOsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationMachineSecretsClusterInput)(nil)).Elem(), ConfigurationMachineSecretsClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationMachineSecretsSecretsInput)(nil)).Elem(), ConfigurationMachineSecretsSecretsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationMachineSecretsTrustdinfoInput)(nil)).Elem(), ConfigurationMachineSecretsTrustdinfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DisksClientConfigurationInput)(nil)).Elem(), DisksClientConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DisksDiskInput)(nil)).Elem(), DisksDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DisksDiskArrayInput)(nil)).Elem(), DisksDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DisksFiltersInput)(nil)).Elem(), DisksFiltersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DisksFiltersPtrInput)(nil)).Elem(), DisksFiltersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DisksTimeoutsInput)(nil)).Elem(), DisksTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DisksTimeoutsPtrInput)(nil)).Elem(), DisksTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretsClientConfigurationInput)(nil)).Elem(), SecretsClientConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretsClientConfigurationPtrInput)(nil)).Elem(), SecretsClientConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretsMachineSecretsInput)(nil)).Elem(), SecretsMachineSecretsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretsMachineSecretsPtrInput)(nil)).Elem(), SecretsMachineSecretsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretsMachineSecretsCertsInput)(nil)).Elem(), SecretsMachineSecretsCertsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretsMachineSecretsCertsPtrInput)(nil)).Elem(), SecretsMachineSecretsCertsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretsMachineSecretsCertsEtcdInput)(nil)).Elem(), SecretsMachineSecretsCertsEtcdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretsMachineSecretsCertsEtcdPtrInput)(nil)).Elem(), SecretsMachineSecretsCertsEtcdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretsMachineSecretsCertsK8sInput)(nil)).Elem(), SecretsMachineSecretsCertsK8sArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretsMachineSecretsCertsK8sPtrInput)(nil)).Elem(), SecretsMachineSecretsCertsK8sArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretsMachineSecretsCertsK8sAggregatorInput)(nil)).Elem(), SecretsMachineSecretsCertsK8sAggregatorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretsMachineSecretsCertsK8sAggregatorPtrInput)(nil)).Elem(), SecretsMachineSecretsCertsK8sAggregatorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretsMachineSecretsCertsK8sServiceaccountInput)(nil)).Elem(), SecretsMachineSecretsCertsK8sServiceaccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretsMachineSecretsCertsK8sServiceaccountPtrInput)(nil)).Elem(), SecretsMachineSecretsCertsK8sServiceaccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretsMachineSecretsCertsOsInput)(nil)).Elem(), SecretsMachineSecretsCertsOsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretsMachineSecretsCertsOsPtrInput)(nil)).Elem(), SecretsMachineSecretsCertsOsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretsMachineSecretsClusterInput)(nil)).Elem(), SecretsMachineSecretsClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretsMachineSecretsClusterPtrInput)(nil)).Elem(), SecretsMachineSecretsClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretsMachineSecretsSecretsInput)(nil)).Elem(), SecretsMachineSecretsSecretsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretsMachineSecretsSecretsPtrInput)(nil)).Elem(), SecretsMachineSecretsSecretsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretsMachineSecretsTrustdinfoInput)(nil)).Elem(), SecretsMachineSecretsTrustdinfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretsMachineSecretsTrustdinfoPtrInput)(nil)).Elem(), SecretsMachineSecretsTrustdinfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TimeoutInput)(nil)).Elem(), TimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TimeoutPtrInput)(nil)).Elem(), TimeoutArgs{})
	pulumi.RegisterOutputType(BootstrapClientConfigurationOutput{})
	pulumi.RegisterOutputType(BootstrapClientConfigurationPtrOutput{})
	pulumi.RegisterOutputType(BootstrapTimeoutsOutput{})
	pulumi.RegisterOutputType(BootstrapTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(ConfigurationApplyClientConfigurationOutput{})
	pulumi.RegisterOutputType(ConfigurationApplyClientConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ConfigurationMachineSecretsOutput{})
	pulumi.RegisterOutputType(ConfigurationMachineSecretsCertsOutput{})
	pulumi.RegisterOutputType(ConfigurationMachineSecretsCertsEtcdOutput{})
	pulumi.RegisterOutputType(ConfigurationMachineSecretsCertsK8sOutput{})
	pulumi.RegisterOutputType(ConfigurationMachineSecretsCertsK8sAggregatorOutput{})
	pulumi.RegisterOutputType(ConfigurationMachineSecretsCertsK8sServiceaccountOutput{})
	pulumi.RegisterOutputType(ConfigurationMachineSecretsCertsOsOutput{})
	pulumi.RegisterOutputType(ConfigurationMachineSecretsClusterOutput{})
	pulumi.RegisterOutputType(ConfigurationMachineSecretsSecretsOutput{})
	pulumi.RegisterOutputType(ConfigurationMachineSecretsTrustdinfoOutput{})
	pulumi.RegisterOutputType(DisksClientConfigurationOutput{})
	pulumi.RegisterOutputType(DisksDiskOutput{})
	pulumi.RegisterOutputType(DisksDiskArrayOutput{})
	pulumi.RegisterOutputType(DisksFiltersOutput{})
	pulumi.RegisterOutputType(DisksFiltersPtrOutput{})
	pulumi.RegisterOutputType(DisksTimeoutsOutput{})
	pulumi.RegisterOutputType(DisksTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(SecretsClientConfigurationOutput{})
	pulumi.RegisterOutputType(SecretsClientConfigurationPtrOutput{})
	pulumi.RegisterOutputType(SecretsMachineSecretsOutput{})
	pulumi.RegisterOutputType(SecretsMachineSecretsPtrOutput{})
	pulumi.RegisterOutputType(SecretsMachineSecretsCertsOutput{})
	pulumi.RegisterOutputType(SecretsMachineSecretsCertsPtrOutput{})
	pulumi.RegisterOutputType(SecretsMachineSecretsCertsEtcdOutput{})
	pulumi.RegisterOutputType(SecretsMachineSecretsCertsEtcdPtrOutput{})
	pulumi.RegisterOutputType(SecretsMachineSecretsCertsK8sOutput{})
	pulumi.RegisterOutputType(SecretsMachineSecretsCertsK8sPtrOutput{})
	pulumi.RegisterOutputType(SecretsMachineSecretsCertsK8sAggregatorOutput{})
	pulumi.RegisterOutputType(SecretsMachineSecretsCertsK8sAggregatorPtrOutput{})
	pulumi.RegisterOutputType(SecretsMachineSecretsCertsK8sServiceaccountOutput{})
	pulumi.RegisterOutputType(SecretsMachineSecretsCertsK8sServiceaccountPtrOutput{})
	pulumi.RegisterOutputType(SecretsMachineSecretsCertsOsOutput{})
	pulumi.RegisterOutputType(SecretsMachineSecretsCertsOsPtrOutput{})
	pulumi.RegisterOutputType(SecretsMachineSecretsClusterOutput{})
	pulumi.RegisterOutputType(SecretsMachineSecretsClusterPtrOutput{})
	pulumi.RegisterOutputType(SecretsMachineSecretsSecretsOutput{})
	pulumi.RegisterOutputType(SecretsMachineSecretsSecretsPtrOutput{})
	pulumi.RegisterOutputType(SecretsMachineSecretsTrustdinfoOutput{})
	pulumi.RegisterOutputType(SecretsMachineSecretsTrustdinfoPtrOutput{})
	pulumi.RegisterOutputType(TimeoutOutput{})
	pulumi.RegisterOutputType(TimeoutPtrOutput{})
}
